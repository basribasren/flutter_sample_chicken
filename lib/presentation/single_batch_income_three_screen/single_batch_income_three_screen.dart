import 'bloc/single_batch_income_three_bloc.dart';import 'models/single_batch_income_three_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/core/utils/validation_functions.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_elevated_button.dart';import 'package:basri_s_application4/widgets/custom_icon_button.dart';import 'package:basri_s_application4/widgets/custom_radio_button.dart';import 'package:basri_s_application4/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class SingleBatchIncomeThreeScreen extends StatelessWidget {SingleBatchIncomeThreeScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<SingleBatchIncomeThreeBloc>(create: (context) => SingleBatchIncomeThreeBloc(SingleBatchIncomeThreeState(singleBatchIncomeThreeModelObj: SingleBatchIncomeThreeModel()))..add(SingleBatchIncomeThreeInitialEvent()), child: SingleBatchIncomeThreeScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Form(key: _formKey, child: SizedBox(width: double.maxFinite, child: Column(children: [SizedBox(height: 2.v), Expanded(child: SingleChildScrollView(child: Padding(padding: EdgeInsets.only(left: 16.h, right: 16.h, bottom: 5.v), child: Column(children: [Text("lbl_add_income".tr, style: CustomTextStyles.titleLargePoppinsBlack900SemiBold), SizedBox(height: 18.v), _buildAddIncomeName(context), SizedBox(height: 15.v), _buildAddIncomeContact(context), SizedBox(height: 15.v), _buildAddIncomeQuantityStack(context), SizedBox(height: 11.v), _buildAddIncomePaymentMethod(context), SizedBox(height: 17.v), _buildAddIncomeAmount1(context), SizedBox(height: 15.v), _buildAddIncomeAmount2(context), SizedBox(height: 15.v), _buildAddIncomeDescription(context)]))))]))), bottomNavigationBar: _buildAdd(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 53.v, leadingWidth: 37.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrow1, margin: EdgeInsets.only(left: 19.h, top: 18.v, bottom: 16.v)), title: AppbarTitle(text: "lbl_batch".tr, margin: EdgeInsets.only(left: 26.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 13.v, 16.h, 17.v))]); } 
/// Section Widget
Widget _buildAddIncomeName(BuildContext context) { return BlocSelector<SingleBatchIncomeThreeBloc, SingleBatchIncomeThreeState, TextEditingController?>(selector: (state) => state.addIncomeNameController, builder: (context, addIncomeNameController) {return CustomTextFormField(controller: addIncomeNameController, hintText: "lbl_name".tr, validator: (value) {if (!isText(value)) {return "err_msg_please_enter_valid_text".tr;} return null;});}); } 
/// Section Widget
Widget _buildAddIncomeContact(BuildContext context) { return BlocSelector<SingleBatchIncomeThreeBloc, SingleBatchIncomeThreeState, TextEditingController?>(selector: (state) => state.addIncomeContactController, builder: (context, addIncomeContactController) {return CustomTextFormField(controller: addIncomeContactController, hintText: "lbl_contact".tr);}); } 
/// Section Widget
Widget _buildAddIncomeQuantity(BuildContext context) { return Expanded(child: Padding(padding: EdgeInsets.only(right: 5.h), child: BlocSelector<SingleBatchIncomeThreeBloc, SingleBatchIncomeThreeState, TextEditingController?>(selector: (state) => state.addIncomeQuantityController, builder: (context, addIncomeQuantityController) {return CustomTextFormField(controller: addIncomeQuantityController, hintText: "lbl_quantity".tr);}))); } 
/// Section Widget
Widget _buildAddIncomeAmount(BuildContext context) { return BlocSelector<SingleBatchIncomeThreeBloc, SingleBatchIncomeThreeState, TextEditingController?>(selector: (state) => state.addIncomeAmountController, builder: (context, addIncomeAmountController) {return CustomTextFormField(width: 79.h, controller: addIncomeAmountController, hintText: "lbl_bill_amount".tr);}); } 
/// Section Widget
Widget _buildAddIncomeQuantityStack(BuildContext context) { return SizedBox(height: 241.v, width: 358.h, child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.topLeft, child: Container(margin: EdgeInsets.only(right: 78.h, bottom: 182.v), padding: EdgeInsets.symmetric(horizontal: 16.h, vertical: 17.v), decoration: AppDecoration.outlineIndigo.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(left: 4.h, top: 3.v), child: Text("lbl_income_category".tr, style: theme.textTheme.bodyMedium)), CustomImageView(imagePath: ImageConstant.imgMenu138, height: 16.adaptSize, width: 16.adaptSize, margin: EdgeInsets.only(top: 3.v, bottom: 2.v), onTap: () {onTapImgMenu(context);})]))), Align(alignment: Alignment.bottomCenter, child: Padding(padding: EdgeInsets.only(bottom: 36.v), child: Column(mainAxisSize: MainAxisSize.min, children: [Row(mainAxisAlignment: MainAxisAlignment.center, children: [_buildAddIncomeQuantity(context), Expanded(child: Container(margin: EdgeInsets.symmetric(horizontal: 5.h), padding: EdgeInsets.symmetric(horizontal: 20.h, vertical: 16.v), decoration: AppDecoration.outlineIndigo.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 4.v), Text("lbl_weight".tr, style: theme.textTheme.bodyMedium)]))), Expanded(child: Container(margin: EdgeInsets.only(left: 5.h), padding: EdgeInsets.symmetric(horizontal: 20.h, vertical: 17.v), decoration: AppDecoration.outlineIndigo.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 2.v), Text("lbl_rate".tr, style: theme.textTheme.bodyMedium)])))]), SizedBox(height: 14.v), Container(width: 358.h, padding: EdgeInsets.symmetric(horizontal: 20.h, vertical: 18.v), decoration: AppDecoration.outlineIndigo.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: _buildAddIncomeAmount(context))]))), Align(alignment: Alignment.bottomLeft, child: Padding(padding: EdgeInsets.only(left: 21.h), child: Text("msg_payment_method".tr, style: CustomTextStyles.bodyMediumBlack900))), Padding(padding: EdgeInsets.only(right: 1.h), child: CustomIconButton(height: 59.adaptSize, width: 59.adaptSize, padding: EdgeInsets.all(15.h), decoration: IconButtonStyleHelper.fillPrimaryTL10, alignment: Alignment.topRight, child: CustomImageView(imagePath: ImageConstant.imgMaterialSymbolsAdd))), Align(alignment: Alignment.bottomRight, child: Container(height: 189.v, width: 150.h, margin: EdgeInsets.only(right: 79.h, bottom: 15.v), child: Stack(alignment: Alignment.center, children: [CustomImageView(imagePath: ImageConstant.imgPolygon1, height: 14.v, width: 30.h, alignment: Alignment.topRight, margin: EdgeInsets.only(right: 8.h)), Align(alignment: Alignment.center, child: Container(padding: EdgeInsets.symmetric(vertical: 4.v), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 2.v), Padding(padding: EdgeInsets.only(left: 20.h), child: Text("lbl_lorem_ipsum2".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 5.v), SizedBox(width: 150.h, child: Divider(color: appTheme.gray200)), SizedBox(height: 6.v), Padding(padding: EdgeInsets.only(left: 20.h), child: Text("lbl_lorem_ipsum2".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 5.v), SizedBox(width: 150.h, child: Divider(color: appTheme.gray200)), SizedBox(height: 6.v), Padding(padding: EdgeInsets.only(left: 20.h), child: Text("lbl_lorem_ipsum2".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 5.v), SizedBox(width: 150.h, child: Divider(color: appTheme.gray200)), SizedBox(height: 6.v), Padding(padding: EdgeInsets.only(left: 20.h), child: Text("lbl_lorem_ipsum2".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 5.v), SizedBox(width: 150.h, child: Divider(color: appTheme.gray200)), SizedBox(height: 6.v), Padding(padding: EdgeInsets.only(left: 20.h), child: Text("lbl_lorem_ipsum2".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 5.v), SizedBox(width: 150.h, child: Divider(color: appTheme.gray200)), SizedBox(height: 6.v), Padding(padding: EdgeInsets.only(left: 20.h), child: Text("lbl_lorem_ipsum2".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 5.v), SizedBox(width: 150.h, child: Divider(color: appTheme.gray200)), SizedBox(height: 6.v), Padding(padding: EdgeInsets.only(left: 20.h), child: Text("lbl_lorem_ipsum2".tr, style: theme.textTheme.bodySmall))])))])))])); } 
/// Section Widget
Widget _buildAddIncomePaymentMethod(BuildContext context) { return BlocBuilder<SingleBatchIncomeThreeBloc, SingleBatchIncomeThreeState>(builder: (context, state) {return state.singleBatchIncomeThreeModelObj!.radioList.isNotEmpty ? Row(children: [CustomRadioButton(text: "lbl_cash".tr, value: state.singleBatchIncomeThreeModelObj?.radioList[0] ?? "", groupValue: state.addIncomePaymentMethod, padding: EdgeInsets.symmetric(vertical: 1.v), onChange: (value) {context.read<SingleBatchIncomeThreeBloc>().add(ChangeRadioButtonEvent(value: value));}), Padding(padding: EdgeInsets.only(left: 50.h), child: CustomRadioButton(text: "lbl_online".tr, value: state.singleBatchIncomeThreeModelObj?.radioList[1] ?? "", groupValue: state.addIncomePaymentMethod, padding: EdgeInsets.symmetric(vertical: 1.v), onChange: (value) {context.read<SingleBatchIncomeThreeBloc>().add(ChangeRadioButtonEvent(value: value));})), Padding(padding: EdgeInsets.only(left: 58.h), child: CustomRadioButton(text: "lbl_unpaid".tr, value: state.singleBatchIncomeThreeModelObj?.radioList[2] ?? "", groupValue: state.addIncomePaymentMethod, padding: EdgeInsets.symmetric(vertical: 1.v), onChange: (value) {context.read<SingleBatchIncomeThreeBloc>().add(ChangeRadioButtonEvent(value: value));}))]) : Container();}); } 
/// Section Widget
Widget _buildAddIncomeAmount1(BuildContext context) { return BlocSelector<SingleBatchIncomeThreeBloc, SingleBatchIncomeThreeState, TextEditingController?>(selector: (state) => state.addIncomeAmount1Controller, builder: (context, addIncomeAmount1Controller) {return CustomTextFormField(controller: addIncomeAmount1Controller, hintText: "lbl_amount_paid".tr);}); } 
/// Section Widget
Widget _buildAddIncomeAmount2(BuildContext context) { return BlocSelector<SingleBatchIncomeThreeBloc, SingleBatchIncomeThreeState, TextEditingController?>(selector: (state) => state.addIncomeAmount2Controller, builder: (context, addIncomeAmount2Controller) {return CustomTextFormField(controller: addIncomeAmount2Controller, hintText: "lbl_amount_due".tr);}); } 
/// Section Widget
Widget _buildAddIncomeDescription(BuildContext context) { return BlocSelector<SingleBatchIncomeThreeBloc, SingleBatchIncomeThreeState, TextEditingController?>(selector: (state) => state.addIncomeDescriptionController, builder: (context, addIncomeDescriptionController) {return CustomTextFormField(controller: addIncomeDescriptionController, hintText: "lbl_description2".tr, textInputAction: TextInputAction.done);}); } 
/// Section Widget
Widget _buildAdd(BuildContext context) { return CustomElevatedButton(text: "lbl_add".tr, margin: EdgeInsets.only(left: 16.h, right: 16.h, bottom: 40.v)); } 
/// Navigates to the singleBatchIncomeOneScreen when the action is triggered.
onTapImgMenu(BuildContext context) { NavigatorService.pushNamed(AppRoutes.singleBatchIncomeOneScreen, ); } 
 }
