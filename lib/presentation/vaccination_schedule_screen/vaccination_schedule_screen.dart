import 'bloc/vaccination_schedule_bloc.dart';import 'models/vaccination_schedule_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/presentation/homepage_service_buy_page/homepage_service_buy_page.dart';import 'package:basri_s_application4/presentation/income_one_page/income_one_page.dart';import 'package:basri_s_application4/presentation/new_order_tab_container_page/new_order_tab_container_page.dart';import 'package:basri_s_application4/presentation/single_batch_view_income_page/single_batch_view_income_page.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_bottom_bar.dart';import 'package:basri_s_application4/widgets/custom_floating_button.dart';import 'package:basri_s_application4/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class VaccinationScheduleScreen extends StatelessWidget {VaccinationScheduleScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<VaccinationScheduleBloc>(create: (context) => VaccinationScheduleBloc(VaccinationScheduleState(vaccinationScheduleModelObj: VaccinationScheduleModel()))..add(VaccinationScheduleInitialEvent()), child: VaccinationScheduleScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: SizedBox(width: double.maxFinite, child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 14.v), _buildVaccinationSchedule(context), Spacer()])), bottomNavigationBar: _buildBottomBar(context), floatingActionButton: _buildFloatingActionButton(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 55.v, leadingWidth: 37.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrow1, margin: EdgeInsets.only(left: 19.h, top: 20.v, bottom: 16.v), onTap: () {onTapArrowOne(context);}), title: AppbarTitle(text: "msg_vaccination_schedule".tr, margin: EdgeInsets.only(left: 26.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 13.v, 16.h, 19.v))]); } 
/// Section Widget
Widget _buildVaccinationSchedule(BuildContext context) { return Column(children: [Padding(padding: EdgeInsets.only(right: 16.h), child: BlocSelector<VaccinationScheduleBloc, VaccinationScheduleState, TextEditingController?>(selector: (state) => state.breedvalueController, builder: (context, breedvalueController) {return CustomTextFormField(width: 117.h, controller: breedvalueController, hintText: "lbl_breed".tr, hintStyle: CustomTextStyles.labelLargeBahnschrift, textInputAction: TextInputAction.done, alignment: Alignment.centerRight, suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 11.v, 9.h, 8.v), child: CustomImageView(imagePath: ImageConstant.imgMenu136, height: 11.adaptSize, width: 11.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 30.v), contentPadding: EdgeInsets.only(left: 10.h, top: 7.v, bottom: 7.v));})), SizedBox(height: 25.v), Divider(), SizedBox(height: 6.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 15.h), child: Text("lbl_day_1".tr, style: CustomTextStyles.bodySmallPoppinsBluegray4000112))), SizedBox(height: 7.v), Padding(padding: EdgeInsets.symmetric(horizontal: 15.h), child: _buildBreed(context, breed: "lbl_vaccine".tr, method: "lbl_vaccine_type".tr)), SizedBox(height: 6.v), Padding(padding: EdgeInsets.symmetric(horizontal: 15.h), child: _buildBreed(context, breed: "lbl_breed2".tr, method: "lbl_method".tr)), SizedBox(height: 5.v), Divider(), SizedBox(height: 6.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 15.h), child: Text("lbl_day_1".tr, style: CustomTextStyles.bodySmallPoppinsBluegray4000112))), SizedBox(height: 7.v), Padding(padding: EdgeInsets.symmetric(horizontal: 15.h), child: _buildBreed(context, breed: "lbl_vaccine".tr, method: "lbl_vaccine_type".tr)), SizedBox(height: 6.v), Padding(padding: EdgeInsets.symmetric(horizontal: 15.h), child: _buildBreed(context, breed: "lbl_breed2".tr, method: "lbl_method".tr)), SizedBox(height: 5.v), Divider(), SizedBox(height: 6.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 15.h), child: Text("lbl_day_1".tr, style: CustomTextStyles.bodySmallPoppinsBluegray4000112))), SizedBox(height: 7.v), Padding(padding: EdgeInsets.symmetric(horizontal: 15.h), child: _buildBreed(context, breed: "lbl_vaccine".tr, method: "lbl_vaccine_type".tr)), SizedBox(height: 6.v), Padding(padding: EdgeInsets.symmetric(horizontal: 15.h), child: _buildBreed(context, breed: "lbl_breed2".tr, method: "lbl_method".tr)), SizedBox(height: 6.v), Divider()]); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
/// Section Widget
Widget _buildFloatingActionButton(BuildContext context) { return CustomFloatingButton(height: 60, width: 60, backgroundColor: theme.colorScheme.primary, child: CustomImageView(imagePath: ImageConstant.imgMaterialSymbolsAdd, height: 30.0.v, width: 30.0.h)); } 
/// Common widget
Widget _buildBreed(BuildContext context, {required String breed, required String method, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(bottom: 1.v), child: Text(breed, style: CustomTextStyles.bodySmallPoppinsBluegray4000112.copyWith(color: appTheme.blueGray40001))), Text(method, style: CustomTextStyles.bodySmallPoppinsBluegray4000112.copyWith(color: appTheme.blueGray40001))]); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Buysell: return AppRoutes.homepageServiceBuyPage; case BottomBarEnum.Batches: return AppRoutes.singleBatchViewIncomePage; case BottomBarEnum.Feedmanagement: return AppRoutes.newOrderTabContainerPage; case BottomBarEnum.Farmsettings: return AppRoutes.incomeOnePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.homepageServiceBuyPage: return HomepageServiceBuyPage.builder(context); case AppRoutes.singleBatchViewIncomePage: return SingleBatchViewIncomePage.builder(context); case AppRoutes.newOrderTabContainerPage: return NewOrderTabContainerPage.builder(context); case AppRoutes.incomeOnePage: return IncomeOnePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the farmSettingsScreen when the action is triggered.
onTapArrowOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.farmSettingsScreen, ); } 
 }
