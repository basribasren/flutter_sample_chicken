import 'bloc/farm_settings_bloc.dart';import 'models/farm_settings_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/presentation/homepage_service_buy_page/homepage_service_buy_page.dart';import 'package:basri_s_application4/presentation/income_one_page/income_one_page.dart';import 'package:basri_s_application4/presentation/new_order_tab_container_page/new_order_tab_container_page.dart';import 'package:basri_s_application4/presentation/single_batch_view_income_page/single_batch_view_income_page.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_bottom_bar.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class FarmSettingsScreen extends StatelessWidget {FarmSettingsScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<FarmSettingsBloc>(create: (context) => FarmSettingsBloc(FarmSettingsState(farmSettingsModelObj: FarmSettingsModel()))..add(FarmSettingsInitialEvent()), child: FarmSettingsScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return BlocBuilder<FarmSettingsBloc, FarmSettingsState>(builder: (context, state) {return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: SizedBox(width: double.maxFinite, child: Column(children: [SizedBox(height: 17.v), Expanded(child: SingleChildScrollView(child: Padding(padding: EdgeInsets.only(right: 1.h), child: Column(children: [Divider(), SizedBox(height: 14.v), Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: _buildMenu(context, userMenuImage1: ImageConstant.imgMenu116, income: "msg_user_information".tr, onTapMenu: () {onTapMenu(context);})), SizedBox(height: 14.v), Divider(), SizedBox(height: 14.v), Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: _buildMenu(context, userMenuImage1: ImageConstant.imgMenu145, income: "lbl_income".tr, onTapMenu: () {onTapMenuRow(context);})), SizedBox(height: 14.v), Divider(), SizedBox(height: 15.v), Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: _buildMenu(context, userMenuImage1: ImageConstant.imgMenu122, income: "lbl_expenses".tr, onTapMenu: () {onTapMenu1(context);})), SizedBox(height: 12.v), Divider(), SizedBox(height: 13.v), _buildFeedingOneRow(context), SizedBox(height: 12.v), Divider(), SizedBox(height: 14.v), Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: _buildMenu1(context, userImage: ImageConstant.imgMenu125, vaccinationSchedule: "lbl_feed_type".tr, onTapMenu1: () {onTapMenu2(context);})), SizedBox(height: 12.v), Divider(), SizedBox(height: 15.v), Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: _buildMenu(context, userMenuImage1: ImageConstant.imgMenu139, income: "lbl_feed_bag_size2".tr, onTapMenu: () {onTapMenu3(context);})), SizedBox(height: 12.v), Divider(), SizedBox(height: 14.v), Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: _buildMenu1(context, userImage: ImageConstant.imgMenu11622x22, vaccinationSchedule: "msg_vaccination_schedule".tr, onTapMenu1: () {onTapMenuRow1(context);})), SizedBox(height: 14.v), Divider(), SizedBox(height: 15.v), Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: _buildMenu1(context, userImage: ImageConstant.imgMenu137, vaccinationSchedule: "lbl_egg_tray_size".tr, onTapMenu1: () {onTapMenu4(context);})), SizedBox(height: 12.v), Divider(), SizedBox(height: 14.v), _buildMenuRow2(context), SizedBox(height: 14.v), Divider(), SizedBox(height: 15.v), Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: _buildMenu1(context, userImage: ImageConstant.imgAdvertisement1, vaccinationSchedule: "lbl_my_ads".tr, onTapMenu1: () {onTapAdvertisementOne(context);})), SizedBox(height: 12.v), Divider(), SizedBox(height: 14.v), _buildRegistrationFormRow(context), SizedBox(height: 14.v), Divider(), SizedBox(height: 18.v), Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: _buildMenu(context, userMenuImage1: ImageConstant.imgRupee1, income: "lbl_currency".tr, onTapMenu: () {onTapRupeeOne(context);})), SizedBox(height: 10.v), _buildThirtyThreeStack(context), SizedBox(height: 17.v), Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: _buildMenu(context, userMenuImage1: ImageConstant.imgMenu13722x22, income: "lbl_language".tr, onTapMenu: () {onTapMenu5(context);})), SizedBox(height: 11.v), Divider(), SizedBox(height: 15.v), _buildMenuRow3(context), SizedBox(height: 16.v), Divider()]))))])), bottomNavigationBar: _buildBottomBar(context)));}); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 61.v, title: AppbarTitle(text: "lbl_farm_settings2".tr, margin: EdgeInsets.only(left: 22.h, top: 27.v, bottom: 6.v)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 23.v, 16.h, 15.v))]); } 
/// Section Widget
Widget _buildFeedingOneRow(BuildContext context) { return GestureDetector(onTap: () {onTapFeedingOneRow(context);}, child: Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgFeeding1, height: 24.adaptSize, width: 24.adaptSize, margin: EdgeInsets.only(bottom: 3.v)), Padding(padding: EdgeInsets.only(left: 17.h, top: 2.v), child: Text("msg_chick_feed_requirement".tr, style: CustomTextStyles.titleMediumBluegray900)), Spacer(), CustomImageView(imagePath: ImageConstant.imgMenu115, height: 14.adaptSize, width: 14.adaptSize, margin: EdgeInsets.only(top: 5.v, bottom: 8.v))]))); } 
/// Section Widget
Widget _buildMenuRow2(BuildContext context) { return GestureDetector(onTap: () {onTapMenuRow2(context);}, child: Padding(padding: EdgeInsets.symmetric(horizontal: 19.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgMenu128, height: 20.adaptSize, width: 20.adaptSize, margin: EdgeInsets.only(bottom: 4.v)), Padding(padding: EdgeInsets.only(left: 20.h), child: Text("lbl_reminders".tr, style: CustomTextStyles.titleMediumBluegray900)), Spacer(), CustomImageView(imagePath: ImageConstant.imgMenu115, height: 14.adaptSize, width: 14.adaptSize, margin: EdgeInsets.only(top: 4.v, bottom: 6.v))]))); } 
/// Section Widget
Widget _buildRegistrationFormRow(BuildContext context) { return GestureDetector(onTap: () {onTapRegistrationFormRow(context);}, child: Padding(padding: EdgeInsets.only(left: 23.h, right: 19.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgRegistrationForm, height: 22.adaptSize, width: 22.adaptSize, margin: EdgeInsets.only(bottom: 2.v)), Padding(padding: EdgeInsets.only(left: 17.h), child: Text("lbl_customer_list".tr, style: CustomTextStyles.titleMediumBluegray900)), Spacer(), CustomImageView(imagePath: ImageConstant.imgMenu115, height: 14.adaptSize, width: 14.adaptSize, margin: EdgeInsets.only(top: 4.v, bottom: 6.v))]))); } 
/// Section Widget
Widget _buildThirtyThreeStack(BuildContext context) { return SizedBox(height: 1.v, width: 389.h, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: SizedBox(width: 389.h, child: Divider())), Align(alignment: Alignment.center, child: SizedBox(width: 389.h, child: Divider()))])); } 
/// Section Widget
Widget _buildMenuRow3(BuildContext context) { return GestureDetector(onTap: () {onTapMenuRow3(context);}, child: Padding(padding: EdgeInsets.symmetric(horizontal: 18.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(imagePath: ImageConstant.imgMenu131, height: 22.adaptSize, width: 22.adaptSize), Padding(padding: EdgeInsets.only(left: 22.h), child: Text("lbl_report".tr, style: CustomTextStyles.titleMediumBluegray900)), Spacer(), CustomImageView(imagePath: ImageConstant.imgMenu115, height: 14.adaptSize, width: 14.adaptSize, margin: EdgeInsets.symmetric(vertical: 4.v))]))); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
/// Common widget
Widget _buildMenu(BuildContext context, {required String userMenuImage1, required String income, Function? onTapMenu, }) { return GestureDetector(onTap: () {onTapMenu!.call();}, child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: userMenuImage1, height: 22.adaptSize, width: 22.adaptSize, margin: EdgeInsets.only(bottom: 2.v)), Padding(padding: EdgeInsets.only(left: 20.h), child: Text(income, style: CustomTextStyles.titleMediumBluegray900.copyWith(color: appTheme.blueGray900))), Spacer(), CustomImageView(imagePath: ImageConstant.imgMenu115, height: 14.adaptSize, width: 14.adaptSize, margin: EdgeInsets.only(top: 4.v, bottom: 6.v))])); } 
/// Common widget
Widget _buildMenu1(BuildContext context, {required String userImage, required String vaccinationSchedule, Function? onTapMenu1, }) { return GestureDetector(onTap: () {onTapMenu1!.call();}, child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: userImage, height: 22.adaptSize, width: 22.adaptSize, margin: EdgeInsets.only(bottom: 2.v)), Padding(padding: EdgeInsets.only(left: 19.h), child: Text(vaccinationSchedule, style: CustomTextStyles.titleMediumBluegray900.copyWith(color: appTheme.blueGray900))), Spacer(), CustomImageView(imagePath: ImageConstant.imgMenu115, height: 14.adaptSize, width: 14.adaptSize, margin: EdgeInsets.only(top: 4.v, bottom: 6.v))])); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Buysell: return AppRoutes.homepageServiceBuyPage; case BottomBarEnum.Batches: return AppRoutes.singleBatchViewIncomePage; case BottomBarEnum.Feedmanagement: return AppRoutes.newOrderTabContainerPage; case BottomBarEnum.Farmsettings: return AppRoutes.incomeOnePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.homepageServiceBuyPage: return HomepageServiceBuyPage.builder(context); case AppRoutes.singleBatchViewIncomePage: return SingleBatchViewIncomePage.builder(context); case AppRoutes.newOrderTabContainerPage: return NewOrderTabContainerPage.builder(context); case AppRoutes.incomeOnePage: return IncomeOnePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the userInfoScreen when the action is triggered.
onTapMenu(BuildContext context) { NavigatorService.pushNamed(AppRoutes.userInfoScreen, ); } 
/// Navigates to the incomeScreen when the action is triggered.
onTapMenuRow(BuildContext context) { NavigatorService.pushNamed(AppRoutes.incomeScreen, ); } 
/// Navigates to the expensesScreen when the action is triggered.
onTapMenu1(BuildContext context) { NavigatorService.pushNamed(AppRoutes.expensesScreen, ); } 
/// Navigates to the chickFeedRequirementOneScreen when the action is triggered.
onTapFeedingOneRow(BuildContext context) { NavigatorService.pushNamed(AppRoutes.chickFeedRequirementOneScreen, ); } 
/// Navigates to the feedTypeOneScreen when the action is triggered.
onTapMenu2(BuildContext context) { NavigatorService.pushNamed(AppRoutes.feedTypeOneScreen, ); } 
/// Navigates to the feedBagSizeScreen when the action is triggered.
onTapMenu3(BuildContext context) { NavigatorService.pushNamed(AppRoutes.feedBagSizeScreen, ); } 
/// Navigates to the vaccinationScheduleOneScreen when the action is triggered.
onTapMenuRow1(BuildContext context) { NavigatorService.pushNamed(AppRoutes.vaccinationScheduleOneScreen, ); } 
/// Navigates to the eggTraySizeScreen when the action is triggered.
onTapMenu4(BuildContext context) { NavigatorService.pushNamed(AppRoutes.eggTraySizeScreen, ); } 
/// Navigates to the remindersOneScreen when the action is triggered.
onTapMenuRow2(BuildContext context) { NavigatorService.pushNamed(AppRoutes.remindersOneScreen, ); } 
/// Navigates to the myAdsScreen when the action is triggered.
onTapAdvertisementOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.myAdsScreen, ); } 
/// Navigates to the customerListScreen when the action is triggered.
onTapRegistrationFormRow(BuildContext context) { NavigatorService.pushNamed(AppRoutes.customerListScreen, ); } 
/// Navigates to the currencyScreen when the action is triggered.
onTapRupeeOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.currencyScreen, ); } 
/// Navigates to the languageScreen when the action is triggered.
onTapMenu5(BuildContext context) { NavigatorService.pushNamed(AppRoutes.languageScreen, ); } 
/// Navigates to the reportsOneScreen when the action is triggered.
onTapMenuRow3(BuildContext context) { NavigatorService.pushNamed(AppRoutes.reportsOneScreen, ); } 
 }
