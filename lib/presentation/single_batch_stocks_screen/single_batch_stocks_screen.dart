import '../single_batch_stocks_screen/widgets/prestarterlist_item_widget.dart';import 'bloc/single_batch_stocks_bloc.dart';import 'models/prestarterlist_item_model.dart';import 'models/single_batch_stocks_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/presentation/homepage_service_buy_page/homepage_service_buy_page.dart';import 'package:basri_s_application4/presentation/income_one_page/income_one_page.dart';import 'package:basri_s_application4/presentation/new_order_tab_container_page/new_order_tab_container_page.dart';import 'package:basri_s_application4/presentation/single_batch_view_income_page/single_batch_view_income_page.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_bottom_bar.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class SingleBatchStocksScreen extends StatelessWidget {SingleBatchStocksScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<SingleBatchStocksBloc>(create: (context) => SingleBatchStocksBloc(SingleBatchStocksState(singleBatchStocksModelObj: SingleBatchStocksModel()))..add(SingleBatchStocksInitialEvent()), child: SingleBatchStocksScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 16.h, vertical: 1.v), child: Column(children: [Text("lbl_stocks".tr, style: CustomTextStyles.titleLargePoppinsBlack900SemiBold), SizedBox(height: 28.v), _buildPreStarterList(context), Align(alignment: Alignment.centerLeft, child: Text("lbl_baramati".tr, style: CustomTextStyles.bodySmallPoppinsBluegray4000112)), SizedBox(height: 8.v), _buildReceivedBags(context, receivedBags: "msg_received_20_bags".tr, servedBags: "lbl_served_10_bags".tr, remainingBags: "msg_remaining_10_bags".tr), SizedBox(height: 41.v), Align(alignment: Alignment.centerLeft, child: Text("lbl_baramati".tr, style: CustomTextStyles.bodySmallPoppinsBluegray4000112)), SizedBox(height: 8.v), _buildReceivedBags(context, receivedBags: "msg_received_30_bags".tr, servedBags: "lbl_served_15_bags".tr, remainingBags: "msg_remaining_15_bags".tr), SizedBox(height: 41.v), Align(alignment: Alignment.centerLeft, child: Text("lbl_baramati".tr, style: CustomTextStyles.bodySmallPoppinsBluegray4000112)), SizedBox(height: 8.v), _buildReceivedBags(context, receivedBags: "msg_received_10_bags".tr, servedBags: "lbl_served_8_bags".tr, remainingBags: "msg_remaining_2_bags".tr), SizedBox(height: 41.v), Align(alignment: Alignment.centerLeft, child: Text("lbl_baramati".tr, style: CustomTextStyles.bodySmallPoppinsBluegray4000112)), SizedBox(height: 8.v), _buildReceivedBags(context, receivedBags: "msg_received_25_bags".tr, servedBags: "lbl_served_17_bags".tr, remainingBags: "msg_remaining_8_bags".tr), SizedBox(height: 5.v)])), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 55.v, leadingWidth: 42.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrow1, margin: EdgeInsets.only(left: 24.h, top: 20.v, bottom: 16.v), onTap: () {onTapArrowOne(context);}), title: AppbarTitle(text: "lbl_batch".tr, margin: EdgeInsets.only(left: 26.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 13.v, 16.h, 19.v))]); } 
/// Section Widget
Widget _buildPreStarterList(BuildContext context) { return BlocSelector<SingleBatchStocksBloc, SingleBatchStocksState, SingleBatchStocksModel?>(selector: (state) => state.singleBatchStocksModelObj, builder: (context, singleBatchStocksModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return Padding(padding: EdgeInsets.symmetric(vertical: 30.0.v), child: SizedBox(width: double.maxFinite, child: Divider(height: 1.v, thickness: 1.v, color: appTheme.gray300)));}, itemCount: singleBatchStocksModelObj?.prestarterlistItemList.length ?? 0, itemBuilder: (context, index) {PrestarterlistItemModel model = singleBatchStocksModelObj?.prestarterlistItemList[index] ?? PrestarterlistItemModel(); return PrestarterlistItemWidget(model);});}); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
/// Common widget
Widget _buildReceivedBags(BuildContext context, {required String receivedBags, required String servedBags, required String remainingBags, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text(receivedBags, style: CustomTextStyles.bodySmallPoppins_1.copyWith(color: appTheme.black900)), Text(servedBags, style: CustomTextStyles.bodySmallPoppins_1.copyWith(color: appTheme.black900)), Text(remainingBags, style: CustomTextStyles.bodySmallPoppins_1.copyWith(color: appTheme.black900))]); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Buysell: return AppRoutes.homepageServiceBuyPage; case BottomBarEnum.Batches: return AppRoutes.singleBatchViewIncomePage; case BottomBarEnum.Feedmanagement: return AppRoutes.newOrderTabContainerPage; case BottomBarEnum.Farmsettings: return AppRoutes.incomeOnePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.homepageServiceBuyPage: return HomepageServiceBuyPage.builder(context); case AppRoutes.singleBatchViewIncomePage: return SingleBatchViewIncomePage.builder(context); case AppRoutes.newOrderTabContainerPage: return NewOrderTabContainerPage.builder(context); case AppRoutes.incomeOnePage: return IncomeOnePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the singleBatchRecordsTabContainerScreen when the action is triggered.
onTapArrowOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.singleBatchRecordsTabContainerScreen, ); } 
 }
