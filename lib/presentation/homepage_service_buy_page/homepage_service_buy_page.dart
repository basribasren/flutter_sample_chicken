import '../homepage_service_buy_page/widgets/broilerprofilegrid_item_widget.dart';import '../homepage_service_buy_page/widgets/textlist_item_widget.dart';import 'bloc/homepage_service_buy_bloc.dart';import 'models/broilerprofilegrid_item_model.dart';import 'models/homepage_service_buy_model.dart';import 'models/textlist_item_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:flutter/material.dart';import 'package:basri_s_application4/presentation/logout_dialog/logout_dialog.dart';class HomepageServiceBuyPage extends StatelessWidget {const HomepageServiceBuyPage({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<HomepageServiceBuyBloc>(create: (context) => HomepageServiceBuyBloc(HomepageServiceBuyState(homepageServiceBuyModelObj: HomepageServiceBuyModel()))..add(HomepageServiceBuyInitialEvent()), child: HomepageServiceBuyPage()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(body: Container(width: double.maxFinite, decoration: AppDecoration.fillOnPrimaryContainer, child: SingleChildScrollView(child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [_buildPoltryFormBusStack(context), SizedBox(height: 16.v), Padding(padding: EdgeInsets.only(left: 16.h), child: Text("msg_popular_category".tr, style: theme.textTheme.titleSmall)), SizedBox(height: 12.v), _buildTextList(context), SizedBox(height: 34.v), Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_recommendations".tr, style: theme.textTheme.titleSmall)), SizedBox(height: 14.v), _buildBroilerProfileGrid(context)]))))); } 
/// Section Widget
Widget _buildPoltryFormBusStack(BuildContext context) { return SizedBox(height: 281.v, width: double.maxFinite, child: Stack(alignment: Alignment.topCenter, children: [CustomImageView(imagePath: ImageConstant.imgPoltryFormBus, height: 132.v, width: 357.h, alignment: Alignment.bottomCenter), Align(alignment: Alignment.topCenter, child: Container(margin: EdgeInsets.fromLTRB(16.h, 94.v, 16.h, 147.v), padding: EdgeInsets.symmetric(horizontal: 13.h, vertical: 8.v), decoration: AppDecoration.outlineIndigo.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Row(children: [CustomImageView(imagePath: ImageConstant.imgSearchBlueGray40001, height: 20.adaptSize, width: 20.adaptSize), Padding(padding: EdgeInsets.only(left: 13.h), child: Text("lbl_search".tr, style: theme.textTheme.bodyMedium))]))), Align(alignment: Alignment.topCenter, child: Container(padding: EdgeInsets.symmetric(horizontal: 15.h, vertical: 11.v), child: Column(mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 2.v), CustomImageView(imagePath: ImageConstant.imgDots1, height: 22.adaptSize, width: 22.adaptSize, alignment: Alignment.centerRight, margin: EdgeInsets.only(right: 1.h), onTap: () {onTapImgDotsOne(context);}), Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(top: 13.v, bottom: 1.v), child: Text("msg_happy_poultry_farm".tr, style: CustomTextStyles.titleMediumSemiBold)), Padding(padding: EdgeInsets.only(left: 28.h, top: 18.v, bottom: 5.v), child: Text("lbl_today_s_rate".tr, style: CustomTextStyles.labelLargeBahnschriftPrimary)), Container(height: 39.v, width: 79.h, margin: EdgeInsets.only(left: 21.h), child: Stack(alignment: Alignment.topRight, children: [Align(alignment: Alignment.bottomCenter, child: Container(margin: EdgeInsets.only(right: 1.h), padding: EdgeInsets.symmetric(horizontal: 25.h, vertical: 4.v), decoration: AppDecoration.fillPrimary.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Text("lbl_sell".tr, style: CustomTextStyles.titleMediumBahnschriftOnPrimaryContainer))), CustomImageView(imagePath: ImageConstant.imgPolygon1, height: 14.v, width: 24.h, alignment: Alignment.topRight)]))])]))), Align(alignment: Alignment.topRight, child: Container(margin: EdgeInsets.only(top: 42.v, right: 8.h), padding: EdgeInsets.symmetric(vertical: 4.v), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 1.v), Align(alignment: Alignment.centerLeft, child: GestureDetector(onTap: () {onTapTxtAboutUs(context);}, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_about_us".tr, style: theme.textTheme.bodySmall)))), SizedBox(height: 6.v), SizedBox(width: 118.h, child: Divider(color: appTheme.gray200)), SizedBox(height: 5.v), GestureDetector(onTap: () {onTapTxtTermAndCondition(context);}, child: Text("msg_terms_conditions".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 6.v), SizedBox(width: 118.h, child: Divider(color: appTheme.gray200)), SizedBox(height: 6.v), Align(alignment: Alignment.centerLeft, child: GestureDetector(onTap: () {onTapTxtSubscription(context);}, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_subscription".tr, style: theme.textTheme.bodySmall)))), SizedBox(height: 5.v), SizedBox(width: 118.h, child: Divider(color: appTheme.gray200)), SizedBox(height: 5.v), Align(alignment: Alignment.centerLeft, child: GestureDetector(onTap: () {onTapTxtProfile(context);}, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_profile".tr, style: theme.textTheme.bodySmall)))), SizedBox(height: 6.v), SizedBox(width: 118.h, child: Divider(color: appTheme.gray200)), SizedBox(height: 6.v), Align(alignment: Alignment.centerLeft, child: GestureDetector(onTap: () {onTapTxtLogout(context);}, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_logout".tr, style: theme.textTheme.bodySmall))))])))])); } 
/// Section Widget
Widget _buildTextList(BuildContext context) { return Align(alignment: Alignment.center, child: SizedBox(height: 103.v, child: BlocSelector<HomepageServiceBuyBloc, HomepageServiceBuyState, HomepageServiceBuyModel?>(selector: (state) => state.homepageServiceBuyModelObj, builder: (context, homepageServiceBuyModelObj) {return ListView.separated(padding: EdgeInsets.symmetric(horizontal: 16.h), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 13.h);}, itemCount: homepageServiceBuyModelObj?.textlistItemList.length ?? 0, itemBuilder: (context, index) {TextlistItemModel model = homepageServiceBuyModelObj?.textlistItemList[index] ?? TextlistItemModel(); return TextlistItemWidget(model);});}))); } 
/// Section Widget
Widget _buildBroilerProfileGrid(BuildContext context) { return Align(alignment: Alignment.center, child: Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: BlocSelector<HomepageServiceBuyBloc, HomepageServiceBuyState, HomepageServiceBuyModel?>(selector: (state) => state.homepageServiceBuyModelObj, builder: (context, homepageServiceBuyModelObj) {return GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: 165.v, crossAxisCount: 2, mainAxisSpacing: 16.h, crossAxisSpacing: 16.h), physics: NeverScrollableScrollPhysics(), itemCount: homepageServiceBuyModelObj?.broilerprofilegridItemList.length ?? 0, itemBuilder: (context, index) {BroilerprofilegridItemModel model = homepageServiceBuyModelObj?.broilerprofilegridItemList[index] ?? BroilerprofilegridItemModel(); return BroilerprofilegridItemWidget(model, onTapBroilerProfile: () {onTapBroilerProfile(context);});});}))); } 
/// Navigates to the myAdsOneScreen when the action is triggered.
onTapBroilerProfile(BuildContext context) { NavigatorService.pushNamed(AppRoutes.myAdsOneScreen); } 
/// Navigates to the homepageServiceBuyOneScreen when the action is triggered.
onTapImgDotsOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.homepageServiceBuyOneScreen, ); } 
/// Navigates to the aboutUsScreen when the action is triggered.
onTapTxtAboutUs(BuildContext context) { NavigatorService.pushNamed(AppRoutes.aboutUsScreen, ); } 
/// Navigates to the termsAndConditionsScreen when the action is triggered.
onTapTxtTermAndCondition(BuildContext context) { NavigatorService.pushNamed(AppRoutes.termsAndConditionsScreen, ); } 
/// Navigates to the subscriptionScreen when the action is triggered.
onTapTxtSubscription(BuildContext context) { NavigatorService.pushNamed(AppRoutes.subscriptionScreen, ); } 
/// Navigates to the createProfileOneScreen when the action is triggered.
onTapTxtProfile(BuildContext context) { NavigatorService.pushNamed(AppRoutes.createProfileOneScreen, ); } 

/// Displays a dialog with the [LogoutDialog] content.
onTapTxtLogout(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: LogoutDialog.builder(context),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: const EdgeInsets.only(left: 0),)); } 
 }
