import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/userprofile1_item_model.dart';import 'package:basri_s_application4/presentation/single_batch_view_expense_screen/models/single_batch_view_expense_model.dart';part 'single_batch_view_expense_event.dart';part 'single_batch_view_expense_state.dart';/// A bloc that manages the state of a SingleBatchViewExpense according to the event that is dispatched to it.
class SingleBatchViewExpenseBloc extends Bloc<SingleBatchViewExpenseEvent, SingleBatchViewExpenseState> {SingleBatchViewExpenseBloc(SingleBatchViewExpenseState initialState) : super(initialState) { on<SingleBatchViewExpenseInitialEvent>(_onInitialize); }

List<Userprofile1ItemModel> fillUserprofile1ItemList() { return [Userprofile1ItemModel(date: "16/11/2021", description: "Description", category: "Category: Feed", amount: "7,000"), Userprofile1ItemModel(date: "16/11/2021", description: "Name", category: "Category: Feed", amount: "13,000"), Userprofile1ItemModel(date: "16/11/2021", description: "Name", category: "Category: Feed", amount: "6,000"), Userprofile1ItemModel(date: "16/11/2021", description: "Name", category: "Category: Feed", amount: "14,700"), Userprofile1ItemModel(date: "16/11/2021", description: "Name", category: "Category: Feed", amount: "3,000")]; } 
_onInitialize(SingleBatchViewExpenseInitialEvent event, Emitter<SingleBatchViewExpenseState> emit, ) async  { emit(state.copyWith(searchController: TextEditingController())); emit(state.copyWith(singleBatchViewExpenseModelObj: state.singleBatchViewExpenseModelObj?.copyWith(userprofile1ItemList: fillUserprofile1ItemList()))); } 
 }
