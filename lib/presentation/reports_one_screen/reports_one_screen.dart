import 'bloc/reports_one_bloc.dart';import 'models/reports_one_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/presentation/homepage_service_buy_page/homepage_service_buy_page.dart';import 'package:basri_s_application4/presentation/income_one_page/income_one_page.dart';import 'package:basri_s_application4/presentation/new_order_tab_container_page/new_order_tab_container_page.dart';import 'package:basri_s_application4/presentation/single_batch_view_income_page/single_batch_view_income_page.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_bottom_bar.dart';import 'package:basri_s_application4/widgets/custom_elevated_button.dart';import 'package:basri_s_application4/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class ReportsOneScreen extends StatelessWidget {ReportsOneScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<ReportsOneBloc>(create: (context) => ReportsOneBloc(ReportsOneState(reportsOneModelObj: ReportsOneModel()))..add(ReportsOneInitialEvent()), child: ReportsOneScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 16.h, vertical: 22.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [BlocSelector<ReportsOneBloc, ReportsOneState, TextEditingController?>(selector: (state) => state.allvalueController, builder: (context, allvalueController) {return CustomTextFormField(width: 182.h, controller: allvalueController, hintText: "lbl_all".tr, hintStyle: CustomTextStyles.labelLargeBahnschrift, textInputAction: TextInputAction.done, alignment: Alignment.centerRight, suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 11.v, 11.h, 8.v), child: CustomImageView(imagePath: ImageConstant.imgMenu136, height: 11.adaptSize, width: 11.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 30.v), contentPadding: EdgeInsets.only(left: 11.h, top: 7.v, bottom: 7.v));}), SizedBox(height: 29.v), Padding(padding: EdgeInsets.only(right: 64.h), child: Row(children: [CustomImageView(imagePath: ImageConstant.imgMicrosoftOffic, height: 33.v, width: 36.h), Padding(padding: EdgeInsets.only(left: 24.h, top: 7.v, bottom: 5.v), child: Text("msg_export_analysis".tr, style: CustomTextStyles.bodyMediumPoppinsBlack90014))])), Spacer(), CustomElevatedButton(text: "lbl_export".tr)])), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 37.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrow1, margin: EdgeInsets.only(left: 19.h, top: 19.v, bottom: 18.v), onTap: () {onTapArrowOne(context);}), title: AppbarTitle(text: "lbl_reports".tr, margin: EdgeInsets.only(left: 26.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 12.v, 16.h, 21.v))]); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Buysell: return AppRoutes.homepageServiceBuyPage; case BottomBarEnum.Batches: return AppRoutes.singleBatchViewIncomePage; case BottomBarEnum.Feedmanagement: return AppRoutes.newOrderTabContainerPage; case BottomBarEnum.Farmsettings: return AppRoutes.incomeOnePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.homepageServiceBuyPage: return HomepageServiceBuyPage.builder(context); case AppRoutes.singleBatchViewIncomePage: return SingleBatchViewIncomePage.builder(context); case AppRoutes.newOrderTabContainerPage: return NewOrderTabContainerPage.builder(context); case AppRoutes.incomeOnePage: return IncomeOnePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the farmSettingsScreen when the action is triggered.
onTapArrowOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.farmSettingsScreen, ); } 
 }
