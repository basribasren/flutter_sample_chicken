import '../my_orders_screen/widgets/myorderslist_item_widget.dart';import 'bloc/my_orders_bloc.dart';import 'models/my_orders_model.dart';import 'models/myorderslist_item_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/widgets/custom_drop_down.dart';import 'package:basri_s_application4/widgets/custom_elevated_button.dart';import 'package:basri_s_application4/widgets/custom_floating_button.dart';import 'package:basri_s_application4/widgets/custom_icon_button.dart';import 'package:basri_s_application4/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';class MyOrdersScreen extends StatelessWidget {const MyOrdersScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<MyOrdersBloc>(create: (context) => MyOrdersBloc(MyOrdersState(myOrdersModelObj: MyOrdersModel()))..add(MyOrdersInitialEvent()), child: MyOrdersScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: SizedBox(width: double.maxFinite, child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 13.v), Expanded(child: SingleChildScrollView(child: Column(children: [CustomImageView(imagePath: ImageConstant.imgDots1, height: 22.adaptSize, width: 22.adaptSize, alignment: Alignment.centerRight, margin: EdgeInsets.only(right: 16.h)), SizedBox(height: 19.v), _buildInventoryButtons(context), SizedBox(height: 26.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 16.h, right: 94.h), child: Row(children: [Container(height: 30.v, width: 36.h, padding: EdgeInsets.symmetric(horizontal: 9.h, vertical: 6.v), decoration: AppDecoration.outlineBluegray40001.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: CustomImageView(imagePath: ImageConstant.imgGroup401, height: 16.adaptSize, width: 16.adaptSize, alignment: Alignment.center)), Padding(padding: EdgeInsets.only(left: 8.h), child: BlocSelector<MyOrdersBloc, MyOrdersState, MyOrdersModel?>(selector: (state) => state.myOrdersModelObj, builder: (context, myOrdersModelObj) {return CustomDropDown(width: 127.h, icon: Container(margin: EdgeInsets.fromLTRB(12.h, 11.v, 11.h, 11.v), child: CustomImageView(imagePath: ImageConstant.imgMenu136, height: 8.adaptSize, width: 8.adaptSize)), hintText: "lbl_select_date".tr, items: myOrdersModelObj?.dropdownItemList ?? [], prefix: Container(margin: EdgeInsets.fromLTRB(10.h, 9.v, 12.h, 9.v), child: CustomImageView(imagePath: ImageConstant.imgVector, height: 12.v, width: 11.h)), prefixConstraints: BoxConstraints(maxHeight: 30.v), onChanged: (value) {context.read<MyOrdersBloc>().add(ChangeDropDownEvent(value: value));});})), Padding(padding: EdgeInsets.only(left: 8.h), child: BlocSelector<MyOrdersBloc, MyOrdersState, TextEditingController?>(selector: (state) => state.menuThirtyEightController, builder: (context, menuThirtyEightController) {return CustomTextFormField(width: 101.h, controller: menuThirtyEightController, hintText: "lbl_feed_type".tr, hintStyle: CustomTextStyles.labelLargeBahnschrift, textInputAction: TextInputAction.done, suffix: Container(margin: EdgeInsets.fromLTRB(20.h, 11.v, 9.h, 11.v), child: CustomImageView(imagePath: ImageConstant.imgMenu136, height: 8.adaptSize, width: 8.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 30.v), contentPadding: EdgeInsets.only(left: 10.h, top: 7.v, bottom: 7.v));}))]))), SizedBox(height: 22.v), _buildFeedOrderValue1(context), SizedBox(height: 37.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildOrderNo(context, orderNo: "lbl_order_no_123".tr, feedType: "lbl_feed_type".tr, threeThousand: "lbl_3_000".tr)), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_quantity".tr, style: theme.textTheme.labelLarge))), SizedBox(height: 4.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildMonth(context, date: "msg_23rd_december_2022".tr, status: "msg_order_status_received".tr)), SizedBox(height: 11.v), _buildMyOrdersList(context), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildOrderNo(context, orderNo: "lbl_order_no_123".tr, feedType: "lbl_feed_type".tr, threeThousand: "lbl_3_000".tr)), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_quantity".tr, style: theme.textTheme.labelLarge))), SizedBox(height: 4.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildMonth(context, date: "msg_23rd_december_2022".tr, status: "msg_order_status_not".tr)), SizedBox(height: 22.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildOrderNo1(context, orderNo: "lbl_order_no_123".tr, feedType: "lbl_feed_type".tr, quantity: "lbl_quantity".tr, threeThousand: "lbl_3_000".tr)), SizedBox(height: 4.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildMonth(context, date: "msg_23rd_december_2022".tr, status: "msg_order_status_not".tr)), SizedBox(height: 22.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildOrderNo1(context, orderNo: "lbl_order_no_123".tr, feedType: "lbl_feed_type".tr, quantity: "lbl_quantity".tr, threeThousand: "lbl_3_000".tr)), SizedBox(height: 3.v), _buildMonthRow2(context), SizedBox(height: 22.v), _buildFeedTypeStack(context), SizedBox(height: 7.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildOrderNo2(context, orderNo: "lbl_order_no_123".tr, feedType: "lbl_feed_type".tr, threeThousand: "lbl_3_000".tr)), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_quantity".tr, style: theme.textTheme.labelLarge))), SizedBox(height: 9.v), _buildMonth1(context, date: "msg_23rd_december_2022".tr, status: "msg_order_status_not".tr), SizedBox(height: 22.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildOrderNo2(context, orderNo: "lbl_order_no_123".tr, feedType: "lbl_feed_type".tr, threeThousand: "lbl_3_000".tr)), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_quantity".tr, style: theme.textTheme.labelLarge))), SizedBox(height: 9.v), _buildMonth1(context, date: "msg_23rd_december_2022".tr, status: "msg_order_status_not".tr)])))])), floatingActionButton: _buildFloatingActionButton(context))); } 
/// Section Widget
Widget _buildInventoryButtons(BuildContext context) { return Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomElevatedButton(height: 40.v, width: 171.h, text: "lbl_inventory".tr, buttonStyle: CustomButtonStyles.fillBlueGray, buttonTextStyle: CustomTextStyles.titleMediumBahnschriftBluegray40001, onPressed: () {onTapInventory(context);}), CustomElevatedButton(height: 40.v, width: 171.h, text: "lbl_orders".tr, margin: EdgeInsets.only(left: 16.h), buttonTextStyle: CustomTextStyles.titleMediumBahnschriftOnPrimaryContainer)])); } 
/// Section Widget
Widget _buildFeedOrderValue1(BuildContext context) { return Container(margin: EdgeInsets.symmetric(horizontal: 16.h), padding: EdgeInsets.symmetric(horizontal: 15.h, vertical: 12.v), decoration: AppDecoration.outlineGray70033.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, children: [Padding(padding: EdgeInsets.only(right: 5.h), child: _buildOrderBagsQuantity(context, orderBagsQuantity: "msg_feed_order_value".tr, zero: "lbl_10_56_180".tr)), SizedBox(height: 15.v), Padding(padding: EdgeInsets.only(right: 5.h), child: _buildOrderBagsQuantity(context, orderBagsQuantity: "msg_order_bags_quantity".tr, zero: "lbl_0".tr)), SizedBox(height: 6.v)])); } 
/// Section Widget
Widget _buildMyOrdersList(BuildContext context) { return BlocSelector<MyOrdersBloc, MyOrdersState, MyOrdersModel?>(selector: (state) => state.myOrdersModelObj, builder: (context, myOrdersModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return Padding(padding: EdgeInsets.symmetric(vertical: 50.5.v), child: SizedBox(width: double.maxFinite, child: Divider(height: 1.v, thickness: 1.v, color: appTheme.gray300)));}, itemCount: myOrdersModelObj?.myorderslistItemList.length ?? 0, itemBuilder: (context, index) {MyorderslistItemModel model = myOrdersModelObj?.myorderslistItemList[index] ?? MyorderslistItemModel(); return MyorderslistItemWidget(model);});}); } 
/// Section Widget
Widget _buildMonthRow2(BuildContext context) { return Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("msg_23rd_december_2022".tr, style: theme.textTheme.labelLarge), SizedBox(height: 18.v, width: 161.h, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.topRight, child: Padding(padding: EdgeInsets.only(right: 13.h), child: Text("lbl_order_no_123".tr, style: CustomTextStyles.labelMediumOnPrimaryContainer))), Align(alignment: Alignment.center, child: Text("msg_order_status_not".tr, style: theme.textTheme.labelLarge))]))])); } 
/// Section Widget
Widget _buildFeedTypeStack(BuildContext context) { return SizedBox(height: 95.v, width: double.maxFinite, child: Stack(alignment: Alignment.centerLeft, children: [Align(alignment: Alignment.topLeft, child: Padding(padding: EdgeInsets.only(left: 16.h, top: 17.v), child: Text("lbl_feed_type".tr, style: CustomTextStyles.titleSmall15_1))), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_quantity".tr, style: theme.textTheme.labelLarge))), Padding(padding: EdgeInsets.fromLTRB(16.h, 61.v, 16.h, 15.v), child: _buildMonth(context, date: "msg_23rd_december_2022".tr, status: "msg_order_status_not".tr)), Align(alignment: Alignment.topLeft, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_order_no_123".tr, style: theme.textTheme.labelMedium))), Align(alignment: Alignment.topRight, child: Padding(padding: EdgeInsets.only(top: 8.v, right: 16.h), child: Text("lbl_3_000".tr, style: CustomTextStyles.titleMediumSemiBold_1))), Align(alignment: Alignment.center, child: Container(width: double.maxFinite, margin: EdgeInsets.only(top: 1.v), padding: EdgeInsets.symmetric(horizontal: 29.h, vertical: 5.v), decoration: AppDecoration.outlineGray300, child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 10.h, top: 5.v, bottom: 11.v), child: Column(children: [CustomIconButton(height: 44.adaptSize, width: 44.adaptSize, padding: EdgeInsets.all(10.h), child: CustomImageView(imagePath: ImageConstant.imgNavBuySell)), SizedBox(height: 6.v), Text("lbl_buy_sell".tr, style: theme.textTheme.bodySmall)])), Padding(padding: EdgeInsets.only(top: 5.v), child: Column(children: [SizedBox(width: 228.h, child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Expanded(child: Padding(padding: EdgeInsets.only(right: 24.h), child: CustomIconButton(height: 44.adaptSize, width: 44.adaptSize, padding: EdgeInsets.all(11.h), child: CustomImageView(imagePath: ImageConstant.imgNavBatches)))), Expanded(child: Padding(padding: EdgeInsets.symmetric(horizontal: 24.h), child: CustomIconButton(height: 44.adaptSize, width: 44.adaptSize, padding: EdgeInsets.all(11.h), decoration: IconButtonStyleHelper.fillPrimary, child: CustomImageView(imagePath: ImageConstant.imgNavFeedManagement22x22)))), Expanded(child: Padding(padding: EdgeInsets.only(left: 24.h), child: CustomIconButton(height: 44.adaptSize, width: 44.adaptSize, padding: EdgeInsets.all(11.h), child: CustomImageView(imagePath: ImageConstant.imgNavFarmSettings))))])), SizedBox(height: 5.v), Container(width: 221.h, margin: EdgeInsets.only(left: 4.h, right: 3.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: EdgeInsets.only(bottom: 11.v), child: Text("lbl_batches".tr, style: theme.textTheme.bodySmall)), Spacer(flex: 49), SizedBox(width: 58.h, child: Text("lbl_feed_management".tr, maxLines: 2, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: theme.textTheme.bodySmall!.copyWith(height: 1.10))), Spacer(flex: 50), SizedBox(width: 37.h, child: Text("lbl_farm_settings".tr, maxLines: 2, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: theme.textTheme.bodySmall!.copyWith(height: 1.10)))]))]))])))])); } 
/// Section Widget
Widget _buildFloatingActionButton(BuildContext context) { return CustomFloatingButton(height: 60, width: 60, backgroundColor: theme.colorScheme.primary, child: CustomImageView(imagePath: ImageConstant.imgMaterialSymbolsAdd, height: 30.0.v, width: 30.0.h)); } 
/// Common widget
Widget _buildOrderBagsQuantity(BuildContext context, {required String orderBagsQuantity, required String zero, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 1.v), child: Text(orderBagsQuantity, style: CustomTextStyles.labelLargeBlack900.copyWith(color: appTheme.black900))), Text(zero, style: CustomTextStyles.labelLargeGreen600.copyWith(color: appTheme.green600))]); } 
/// Common widget
Widget _buildOrderNo(BuildContext context, {required String orderNo, required String feedType, required String threeThousand, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text(orderNo, style: theme.textTheme.labelMedium!.copyWith(color: theme.colorScheme.primary)), SizedBox(height: 2.v), Text(feedType, style: CustomTextStyles.titleSmall15_1.copyWith(color: appTheme.black900))]), Padding(padding: EdgeInsets.only(top: 8.v, bottom: 4.v), child: Text(threeThousand, style: CustomTextStyles.titleMediumSemiBold_1.copyWith(color: appTheme.black900)))]); } 
/// Common widget
Widget _buildMonth(BuildContext context, {required String date, required String status, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text(date, style: theme.textTheme.labelLarge!.copyWith(color: appTheme.blueGray40001)), Text(status, style: theme.textTheme.labelLarge!.copyWith(color: appTheme.blueGray40001))]); } 
/// Common widget
Widget _buildOrderNo1(BuildContext context, {required String orderNo, required String feedType, required String quantity, required String threeThousand, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text(orderNo, style: theme.textTheme.labelMedium!.copyWith(color: theme.colorScheme.primary)), SizedBox(height: 2.v), SizedBox(height: 40.v, width: 77.h, child: Stack(alignment: Alignment.bottomLeft, children: [Align(alignment: Alignment.topCenter, child: Text(feedType, style: CustomTextStyles.titleSmall15_1.copyWith(color: appTheme.black900))), Align(alignment: Alignment.bottomLeft, child: Text(quantity, style: theme.textTheme.labelLarge!.copyWith(color: appTheme.blueGray40001)))]))]), Padding(padding: EdgeInsets.only(top: 8.v, bottom: 21.v), child: Text(threeThousand, style: CustomTextStyles.titleMediumSemiBold_1.copyWith(color: appTheme.black900)))]); } 
/// Common widget
Widget _buildOrderNo2(BuildContext context, {required String orderNo, required String feedType, required String threeThousand, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text(orderNo, style: theme.textTheme.labelMedium!.copyWith(color: theme.colorScheme.primary)), SizedBox(height: 4.v), Text(feedType, style: CustomTextStyles.titleSmall15_1.copyWith(color: appTheme.black900))]), Padding(padding: EdgeInsets.only(top: 7.v, bottom: 6.v), child: Text(threeThousand, textAlign: TextAlign.right, style: CustomTextStyles.titleMediumSemiBold_1.copyWith(color: appTheme.black900)))]); } 
/// Common widget
Widget _buildMonth1(BuildContext context, {required String date, required String status, }) { return SizedBox(height: 18.v, width: 358.h, child: Stack(alignment: Alignment.centerRight, children: [Align(alignment: Alignment.centerLeft, child: Text(date, style: theme.textTheme.labelLarge!.copyWith(color: appTheme.blueGray40001))), Align(alignment: Alignment.centerRight, child: Text(status, textAlign: TextAlign.right, style: theme.textTheme.labelLarge!.copyWith(color: appTheme.blueGray40001)))])); } 
/// Navigates to the inventoryScreen when the action is triggered.
onTapInventory(BuildContext context) { NavigatorService.pushNamed(AppRoutes.inventoryScreen, ); } 
 }
