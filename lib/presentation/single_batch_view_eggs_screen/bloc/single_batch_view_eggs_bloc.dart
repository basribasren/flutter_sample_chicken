import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/eggcollection_item_model.dart';import 'package:basri_s_application4/presentation/single_batch_view_eggs_screen/models/single_batch_view_eggs_model.dart';part 'single_batch_view_eggs_event.dart';part 'single_batch_view_eggs_state.dart';/// A bloc that manages the state of a SingleBatchViewEggs according to the event that is dispatched to it.
class SingleBatchViewEggsBloc extends Bloc<SingleBatchViewEggsEvent, SingleBatchViewEggsState> {SingleBatchViewEggsBloc(SingleBatchViewEggsState initialState) : super(initialState) { on<SingleBatchViewEggsInitialEvent>(_onInitialize); }

List<EggcollectionItemModel> fillEggcollectionItemList() { return [EggcollectionItemModel(layingPercentage: "Laying Percentage: 90%", day: "Day 1", costPerEgg: "Cost: 6/egg", eggTrayCollection: "Egg Tray Collection: 11 Trays", pulletEggs: "Pullet Eggs: 50 Eggs", brokenEggs: "Broken Eggs: 9"), EggcollectionItemModel(layingPercentage: "Laying Percentage: 90%", day: "Day 2", costPerEgg: "Cost: 6/egg", eggTrayCollection: "Egg Tray Collection: 11 Trays", pulletEggs: "Pullet Eggs: 50 Eggs", brokenEggs: "Broken Eggs: 9"), EggcollectionItemModel(layingPercentage: "Laying Percentage: 90%", day: "Day 3", costPerEgg: "Cost: 6/egg", eggTrayCollection: "Egg Tray Collection: 11 Trays", pulletEggs: "Pullet Eggs: 50 Eggs", brokenEggs: "Broken Eggs: 9"), EggcollectionItemModel(layingPercentage: "Laying Percentage: 90%", day: "Day 4", costPerEgg: "Cost: 6/egg", eggTrayCollection: "Egg Tray Collection: 11 Trays", pulletEggs: "Pullet Eggs: 50 Eggs", brokenEggs: "Broken Eggs: 9"), EggcollectionItemModel(layingPercentage: "Laying Percentage: 90%", day: "Day 5", costPerEgg: "Cost: 6/egg", eggTrayCollection: "Egg Tray Collection: 11 Trays", pulletEggs: "Pullet Eggs: 50 Eggs", brokenEggs: "Broken Eggs: 9")]; } 
_onInitialize(SingleBatchViewEggsInitialEvent event, Emitter<SingleBatchViewEggsState> emit, ) async  { emit(state.copyWith(timeController: TextEditingController())); emit(state.copyWith(singleBatchViewEggsModelObj: state.singleBatchViewEggsModelObj?.copyWith(eggcollectionItemList: fillEggcollectionItemList()))); } 
 }
