import 'bloc/reports_bloc.dart';import 'models/reports_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/presentation/homepage_service_buy_page/homepage_service_buy_page.dart';import 'package:basri_s_application4/presentation/income_one_page/income_one_page.dart';import 'package:basri_s_application4/presentation/new_order_tab_container_page/new_order_tab_container_page.dart';import 'package:basri_s_application4/presentation/single_batch_view_income_page/single_batch_view_income_page.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_bottom_bar.dart';import 'package:basri_s_application4/widgets/custom_elevated_button.dart';import 'package:basri_s_application4/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class ReportsScreen extends StatelessWidget {ReportsScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<ReportsBloc>(create: (context) => ReportsBloc(ReportsState(reportsModelObj: ReportsModel()))..add(ReportsInitialEvent()), child: ReportsScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 10.h, vertical: 22.v), child: Column(mainAxisAlignment: MainAxisAlignment.center, children: [_buildIncomevalue(context), Spacer(), _buildExportButton(context)])), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 37.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrow1, margin: EdgeInsets.only(left: 19.h, top: 19.v, bottom: 18.v), onTap: () {onTapArrowOne(context);}), title: AppbarTitle(text: "lbl_reports".tr, margin: EdgeInsets.only(left: 26.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 12.v, 16.h, 21.v))]); } 
/// Section Widget
Widget _buildIncomeValueEditText(BuildContext context) { return BlocSelector<ReportsBloc, ReportsState, TextEditingController?>(selector: (state) => state.incomeValueEditTextController, builder: (context, incomeValueEditTextController) {return CustomTextFormField(width: 145.h, controller: incomeValueEditTextController, hintText: "lbl_income".tr, hintStyle: theme.textTheme.bodySmall!, contentPadding: EdgeInsets.symmetric(horizontal: 13.h), borderDecoration: TextFormFieldStyleHelper.underLineGray, filled: false);}); } 
/// Section Widget
Widget _buildExpensesValueEditText(BuildContext context) { return BlocSelector<ReportsBloc, ReportsState, TextEditingController?>(selector: (state) => state.expensesValueEditTextController, builder: (context, expensesValueEditTextController) {return CustomTextFormField(width: 145.h, controller: expensesValueEditTextController, hintText: "lbl_expenses".tr, hintStyle: theme.textTheme.bodySmall!, contentPadding: EdgeInsets.symmetric(horizontal: 13.h), borderDecoration: TextFormFieldStyleHelper.underLineGray, filled: false);}); } 
/// Section Widget
Widget _buildChickFeedRequirementValueEditText(BuildContext context) { return BlocSelector<ReportsBloc, ReportsState, TextEditingController?>(selector: (state) => state.chickFeedRequirementValueEditTextController, builder: (context, chickFeedRequirementValueEditTextController) {return CustomTextFormField(width: 145.h, controller: chickFeedRequirementValueEditTextController, hintText: "msg_chick_feed_requirement".tr, hintStyle: theme.textTheme.bodySmall!, contentPadding: EdgeInsets.symmetric(horizontal: 14.h), borderDecoration: TextFormFieldStyleHelper.underLineGray, filled: false);}); } 
/// Section Widget
Widget _buildFeedTypeValueEditText(BuildContext context) { return BlocSelector<ReportsBloc, ReportsState, TextEditingController?>(selector: (state) => state.feedTypeValueEditTextController, builder: (context, feedTypeValueEditTextController) {return CustomTextFormField(width: 145.h, controller: feedTypeValueEditTextController, hintText: "lbl_feed_type".tr, hintStyle: theme.textTheme.bodySmall!, textInputAction: TextInputAction.done, contentPadding: EdgeInsets.symmetric(horizontal: 13.h), borderDecoration: TextFormFieldStyleHelper.underLineGray, filled: false);}); } 
/// Section Widget
Widget _buildIncomevalue(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 7.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgMicrosoftOffic, height: 33.v, width: 36.h, margin: EdgeInsets.only(top: 59.v, bottom: 66.v)), Container(height: 158.v, width: 303.h, margin: EdgeInsets.only(left: 24.h), child: Stack(alignment: Alignment.topRight, children: [Align(alignment: Alignment.topLeft, child: Padding(padding: EdgeInsets.only(top: 66.v), child: Text("msg_export_analysis".tr, style: CustomTextStyles.bodyMediumPoppinsBlack90014))), Align(alignment: Alignment.topRight, child: Container(width: 182.h, margin: EdgeInsets.only(left: 114.h, right: 7.h, bottom: 128.v), padding: EdgeInsets.symmetric(horizontal: 10.h, vertical: 5.v), decoration: AppDecoration.outlineBluegray40001.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(top: 1.v), child: Text("lbl_all".tr, style: CustomTextStyles.labelLargeBahnschrift)), CustomImageView(imagePath: ImageConstant.imgMenu138, height: 11.adaptSize, width: 11.adaptSize, margin: EdgeInsets.only(top: 4.v), onTap: () {onTapImgMenu(context);})]))), Align(alignment: Alignment.bottomRight, child: SizedBox(height: 137.v, width: 145.h, child: Stack(alignment: Alignment.bottomCenter, children: [CustomImageView(imagePath: ImageConstant.imgPolygon1, height: 14.v, width: 29.h, alignment: Alignment.topRight, margin: EdgeInsets.only(right: 8.h)), Align(alignment: Alignment.bottomCenter, child: Container(padding: EdgeInsets.symmetric(vertical: 5.v), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Column(mainAxisSize: MainAxisSize.min, children: [_buildIncomeValueEditText(context), SizedBox(height: 6.v), _buildExpensesValueEditText(context), SizedBox(height: 6.v), _buildChickFeedRequirementValueEditText(context), SizedBox(height: 7.v), _buildFeedTypeValueEditText(context), SizedBox(height: 5.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 14.h), child: Text("msg_vaccination_schedule".tr, style: theme.textTheme.bodySmall)))])))])))]))])); } 
/// Section Widget
Widget _buildExportButton(BuildContext context) { return CustomElevatedButton(text: "lbl_export".tr, margin: EdgeInsets.symmetric(horizontal: 6.h)); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Buysell: return AppRoutes.homepageServiceBuyPage; case BottomBarEnum.Batches: return AppRoutes.singleBatchViewIncomePage; case BottomBarEnum.Feedmanagement: return AppRoutes.newOrderTabContainerPage; case BottomBarEnum.Farmsettings: return AppRoutes.incomeOnePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.homepageServiceBuyPage: return HomepageServiceBuyPage.builder(context); case AppRoutes.singleBatchViewIncomePage: return SingleBatchViewIncomePage.builder(context); case AppRoutes.newOrderTabContainerPage: return NewOrderTabContainerPage.builder(context); case AppRoutes.incomeOnePage: return IncomeOnePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the farmSettingsScreen when the action is triggered.
onTapArrowOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.farmSettingsScreen, ); } 
/// Navigates to the reportsOneScreen when the action is triggered.
onTapImgMenu(BuildContext context) { NavigatorService.pushNamed(AppRoutes.reportsOneScreen, ); } 
 }
