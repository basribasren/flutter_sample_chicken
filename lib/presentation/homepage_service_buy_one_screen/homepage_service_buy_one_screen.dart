import '../homepage_service_buy_one_screen/widgets/broilerprofilegridsection_item_widget.dart';import '../homepage_service_buy_one_screen/widgets/usertextlistsection_item_widget.dart';import 'bloc/homepage_service_buy_one_bloc.dart';import 'models/broilerprofilegridsection_item_model.dart';import 'models/homepage_service_buy_one_model.dart';import 'models/usertextlistsection_item_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/presentation/homepage_service_buy_page/homepage_service_buy_page.dart';import 'package:basri_s_application4/presentation/income_one_page/income_one_page.dart';import 'package:basri_s_application4/presentation/new_order_tab_container_page/new_order_tab_container_page.dart';import 'package:basri_s_application4/presentation/single_batch_view_income_page/single_batch_view_income_page.dart';import 'package:basri_s_application4/widgets/custom_bottom_bar.dart';import 'package:basri_s_application4/widgets/custom_elevated_button.dart';import 'package:basri_s_application4/widgets/custom_search_view.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class HomepageServiceBuyOneScreen extends StatelessWidget {HomepageServiceBuyOneScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<HomepageServiceBuyOneBloc>(create: (context) => HomepageServiceBuyOneBloc(HomepageServiceBuyOneState(homepageServiceBuyOneModelObj: HomepageServiceBuyOneModel()))..add(HomepageServiceBuyOneInitialEvent()), child: HomepageServiceBuyOneScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: SizedBox(width: double.maxFinite, child: Column(children: [SizedBox(height: 13.v), Expanded(child: SingleChildScrollView(child: Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: Column(children: [CustomImageView(imagePath: ImageConstant.imgDots1, height: 22.adaptSize, width: 22.adaptSize, alignment: Alignment.centerRight, onTap: () {onTapImgDotsTwo(context);}), SizedBox(height: 9.v), _buildSellSection(context), SizedBox(height: 20.v), BlocSelector<HomepageServiceBuyOneBloc, HomepageServiceBuyOneState, TextEditingController?>(selector: (state) => state.searchController, builder: (context, searchController) {return CustomSearchView(controller: searchController, hintText: "lbl_search".tr);}), SizedBox(height: 15.v), CustomImageView(imagePath: ImageConstant.imgPoltryFormBus, height: 132.v, width: 357.h), SizedBox(height: 16.v), Align(alignment: Alignment.centerLeft, child: Text("msg_popular_category".tr, style: theme.textTheme.titleSmall)), SizedBox(height: 12.v), _buildUserTextListSection(context), SizedBox(height: 34.v), Align(alignment: Alignment.centerLeft, child: Text("lbl_recommendations".tr, style: theme.textTheme.titleSmall)), SizedBox(height: 14.v), _buildBroilerProfileGridSection(context)]))))])), bottomNavigationBar: _buildBottomBarSection(context))); } 
/// Section Widget
Widget _buildSellSection(BuildContext context) { return Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(top: 4.v, bottom: 1.v), child: Text("msg_happy_poultry_farm".tr, style: CustomTextStyles.titleMediumSemiBold)), GestureDetector(onTap: () {onTapTxtTodaySRate(context);}, child: Padding(padding: EdgeInsets.only(left: 28.h, top: 9.v, bottom: 5.v), child: Text("lbl_today_s_rate".tr, style: CustomTextStyles.labelLargeBahnschriftPrimary))), CustomElevatedButton(height: 30.v, width: 78.h, text: "lbl_sell".tr, margin: EdgeInsets.only(left: 21.h), buttonTextStyle: CustomTextStyles.titleMediumBahnschriftOnPrimaryContainer, onPressed: () {onTapSell(context);})]); } 
/// Section Widget
Widget _buildUserTextListSection(BuildContext context) { return SizedBox(height: 103.v, child: BlocSelector<HomepageServiceBuyOneBloc, HomepageServiceBuyOneState, HomepageServiceBuyOneModel?>(selector: (state) => state.homepageServiceBuyOneModelObj, builder: (context, homepageServiceBuyOneModelObj) {return ListView.separated(scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 13.h);}, itemCount: homepageServiceBuyOneModelObj?.usertextlistsectionItemList.length ?? 0, itemBuilder: (context, index) {UsertextlistsectionItemModel model = homepageServiceBuyOneModelObj?.usertextlistsectionItemList[index] ?? UsertextlistsectionItemModel(); return UsertextlistsectionItemWidget(model);});})); } 
/// Section Widget
Widget _buildBroilerProfileGridSection(BuildContext context) { return BlocSelector<HomepageServiceBuyOneBloc, HomepageServiceBuyOneState, HomepageServiceBuyOneModel?>(selector: (state) => state.homepageServiceBuyOneModelObj, builder: (context, homepageServiceBuyOneModelObj) {return GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: 165.v, crossAxisCount: 2, mainAxisSpacing: 16.h, crossAxisSpacing: 16.h), physics: NeverScrollableScrollPhysics(), itemCount: homepageServiceBuyOneModelObj?.broilerprofilegridsectionItemList.length ?? 0, itemBuilder: (context, index) {BroilerprofilegridsectionItemModel model = homepageServiceBuyOneModelObj?.broilerprofilegridsectionItemList[index] ?? BroilerprofilegridsectionItemModel(); return BroilerprofilegridsectionItemWidget(model, onTapBroilerProfile: () {onTapBroilerProfile(context);});});}); } 
/// Section Widget
Widget _buildBottomBarSection(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Buysell: return AppRoutes.homepageServiceBuyPage; case BottomBarEnum.Batches: return AppRoutes.singleBatchViewIncomePage; case BottomBarEnum.Feedmanagement: return AppRoutes.newOrderTabContainerPage; case BottomBarEnum.Farmsettings: return AppRoutes.incomeOnePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.homepageServiceBuyPage: return HomepageServiceBuyPage.builder(context); case AppRoutes.singleBatchViewIncomePage: return SingleBatchViewIncomePage.builder(context); case AppRoutes.newOrderTabContainerPage: return NewOrderTabContainerPage.builder(context); case AppRoutes.incomeOnePage: return IncomeOnePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the myAdsOneScreen when the action is triggered.
onTapBroilerProfile(BuildContext context) { NavigatorService.pushNamed(AppRoutes.myAdsOneScreen); } 
/// Navigates to the homepageServiceBuyContainerScreen when the action is triggered.
onTapImgDotsTwo(BuildContext context) { NavigatorService.pushNamed(AppRoutes.homepageServiceBuyContainerScreen, ); } 
/// Navigates to the homepageTodaysRateScreen when the action is triggered.
onTapTxtTodaySRate(BuildContext context) { NavigatorService.pushNamed(AppRoutes.homepageTodaysRateScreen, ); } 
/// Navigates to the homepageSellOneScreen when the action is triggered.
onTapSell(BuildContext context) { NavigatorService.pushNamed(AppRoutes.homepageSellOneScreen, ); } 
 }
