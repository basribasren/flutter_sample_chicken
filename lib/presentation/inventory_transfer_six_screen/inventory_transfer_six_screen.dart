import 'bloc/inventory_transfer_six_bloc.dart';import 'models/inventory_transfer_six_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_elevated_button.dart';import 'package:basri_s_application4/widgets/custom_switch.dart';import 'package:basri_s_application4/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';import 'package:basri_s_application4/presentation/inventory_transfer_seven_dialog/inventory_transfer_seven_dialog.dart';class InventoryTransferSixScreen extends StatelessWidget {const InventoryTransferSixScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<InventoryTransferSixBloc>(create: (context) => InventoryTransferSixBloc(InventoryTransferSixState(inventoryTransferSixModelObj: InventoryTransferSixModel()))..add(InventoryTransferSixInitialEvent()), child: InventoryTransferSixScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 16.h), child: Column(children: [Align(alignment: Alignment.centerLeft, child: Row(children: [Padding(padding: EdgeInsets.only(top: 3.v, bottom: 1.v), child: Text("lbl_stock_in".tr, style: CustomTextStyles.bodyMediumBlack900)), BlocSelector<InventoryTransferSixBloc, InventoryTransferSixState, bool?>(selector: (state) => state.isSelectedSwitch, builder: (context, isSelectedSwitch) {return CustomSwitch(margin: EdgeInsets.only(left: 11.h), value: isSelectedSwitch, onChange: (value) {context.read<InventoryTransferSixBloc>().add(ChangeSwitchEvent(value: value));});}), Padding(padding: EdgeInsets.only(left: 10.h, top: 3.v, bottom: 1.v), child: Text("lbl_stock_out".tr, style: theme.textTheme.bodyMedium))])), SizedBox(height: 22.v), _buildFromBatch(context), SizedBox(height: 15.v), _buildFeedType(context), SizedBox(height: 15.v), _buildQuantityStockAvailable(context), SizedBox(height: 5.v)])), bottomNavigationBar: _buildTransferFeedToInventory(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 37.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrow1, margin: EdgeInsets.only(left: 19.h, top: 19.v, bottom: 18.v), onTap: () {onTapArrowOne(context);}), title: AppbarTitle(text: "msg_transfer_inventory".tr, margin: EdgeInsets.only(left: 26.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 13.v, 16.h, 20.v))]); } 
/// Section Widget
Widget _buildFromBatch(BuildContext context) { return BlocSelector<InventoryTransferSixBloc, InventoryTransferSixState, TextEditingController?>(selector: (state) => state.fromBatchController, builder: (context, fromBatchController) {return CustomTextFormField(controller: fromBatchController, hintText: "lbl_from_batch".tr, suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 21.v, 22.h, 21.v), child: CustomImageView(imagePath: ImageConstant.imgMenu136, height: 16.adaptSize, width: 16.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 58.v), contentPadding: EdgeInsets.only(left: 21.h, top: 19.v, bottom: 19.v));}); } 
/// Section Widget
Widget _buildFeedType(BuildContext context) { return BlocSelector<InventoryTransferSixBloc, InventoryTransferSixState, TextEditingController?>(selector: (state) => state.feedTypeController, builder: (context, feedTypeController) {return CustomTextFormField(controller: feedTypeController, hintText: "lbl_feed_type".tr, suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 22.v, 22.h, 21.v), child: CustomImageView(imagePath: ImageConstant.imgMenu136, height: 16.adaptSize, width: 16.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 59.v), contentPadding: EdgeInsets.only(left: 21.h, top: 20.v, bottom: 20.v));}); } 
/// Section Widget
Widget _buildQuantityStockAvailable(BuildContext context) { return BlocSelector<InventoryTransferSixBloc, InventoryTransferSixState, TextEditingController?>(selector: (state) => state.quantityStockAvailableController, builder: (context, quantityStockAvailableController) {return CustomTextFormField(controller: quantityStockAvailableController, hintText: "msg_quantity_stock".tr, textInputAction: TextInputAction.done);}); } 
/// Section Widget
Widget _buildTransferFeedToInventory(BuildContext context) { return CustomElevatedButton(text: "msg_transfer_feed_to".tr, margin: EdgeInsets.only(left: 16.h, right: 16.h, bottom: 29.v), onPressed: () {onTapTransferFeedToInventory(context);}); } 
/// Navigates to the inventoryScreen when the action is triggered.
onTapArrowOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.inventoryScreen, ); } 

/// Displays a dialog with the [InventoryTransferSevenDialog] content.
onTapTransferFeedToInventory(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: InventoryTransferSevenDialog.builder(context),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: const EdgeInsets.only(left: 0),)); } 
 }
