import 'bloc/inventory_add_one_bloc.dart';import 'models/inventory_add_one_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_elevated_button.dart';import 'package:basri_s_application4/widgets/custom_outlined_button.dart';import 'package:basri_s_application4/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';import 'package:basri_s_application4/presentation/inventory_add_dialog/inventory_add_dialog.dart';class InventoryAddOneScreen extends StatelessWidget {const InventoryAddOneScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<InventoryAddOneBloc>(create: (context) => InventoryAddOneBloc(InventoryAddOneState(inventoryAddOneModelObj: InventoryAddOneModel()))..add(InventoryAddOneInitialEvent()), child: InventoryAddOneScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 16.h, vertical: 14.v), child: Column(children: [_buildOrderNumber(context), SizedBox(height: 13.v), _buildFeedType(context), SizedBox(height: 13.v), _buildFeedCompany(context), SizedBox(height: 15.v), _buildWeight(context), SizedBox(height: 14.v), _buildFifty1(context), SizedBox(height: 15.v), _buildPrice(context), SizedBox(height: 15.v), _buildTotal(context), SizedBox(height: 5.v)])), bottomNavigationBar: _buildFeedReceived(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 37.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrow1, margin: EdgeInsets.only(left: 19.h, top: 18.v, bottom: 19.v), onTap: () {onTapArrowOne(context);}), title: AppbarTitle(text: "lbl_add_inventory".tr, margin: EdgeInsets.only(left: 26.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 12.v, 16.h, 21.v))]); } 
/// Section Widget
Widget _buildOrderNumber(BuildContext context) { return BlocSelector<InventoryAddOneBloc, InventoryAddOneState, TextEditingController?>(selector: (state) => state.orderNumberController, builder: (context, orderNumberController) {return CustomTextFormField(controller: orderNumberController, hintText: "lbl_order_no".tr, suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 21.v, 22.h, 21.v), child: CustomImageView(imagePath: ImageConstant.imgMenu136, height: 16.adaptSize, width: 16.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 58.v), contentPadding: EdgeInsets.only(left: 21.h, top: 19.v, bottom: 19.v));}); } 
/// Section Widget
Widget _buildFeedType(BuildContext context) { return BlocSelector<InventoryAddOneBloc, InventoryAddOneState, TextEditingController?>(selector: (state) => state.feedTypeController, builder: (context, feedTypeController) {return CustomTextFormField(controller: feedTypeController, hintText: "lbl_feed_type".tr);}); } 
/// Section Widget
Widget _buildFeedCompany(BuildContext context) { return BlocSelector<InventoryAddOneBloc, InventoryAddOneState, TextEditingController?>(selector: (state) => state.feedCompanyController, builder: (context, feedCompanyController) {return CustomTextFormField(controller: feedCompanyController, hintText: "lbl_feed_company".tr);}); } 
/// Section Widget
Widget _buildWeight(BuildContext context) { return BlocSelector<InventoryAddOneBloc, InventoryAddOneState, TextEditingController?>(selector: (state) => state.weightController, builder: (context, weightController) {return CustomTextFormField(controller: weightController, hintText: "lbl_50kg2".tr);}); } 
/// Section Widget
Widget _buildFifty(BuildContext context) { return CustomOutlinedButton(height: 59.v, width: 51.h, text: "lbl_50".tr); } 
/// Section Widget
Widget _buildFifty1(BuildContext context) { return Align(alignment: Alignment.centerRight, child: Padding(padding: EdgeInsets.only(left: 21.h), child: Row(mainAxisAlignment: MainAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(top: 22.v, bottom: 17.v), child: Text("lbl_bags_quantity".tr, style: theme.textTheme.bodyMedium)), Spacer(), Container(height: 59.v, width: 42.h, padding: EdgeInsets.symmetric(horizontal: 8.h, vertical: 16.v), decoration: AppDecoration.outlinePrimary1.copyWith(borderRadius: BorderRadiusStyle.customBorderTL10), child: CustomImageView(imagePath: ImageConstant.imgIcBaselineMinus, height: 24.adaptSize, width: 24.adaptSize, alignment: Alignment.center)), _buildFifty(context), Container(height: 59.v, width: 42.h, padding: EdgeInsets.symmetric(horizontal: 8.h, vertical: 16.v), decoration: AppDecoration.outlinePrimary1.copyWith(borderRadius: BorderRadiusStyle.customBorderTL10), child: CustomImageView(imagePath: ImageConstant.imgMaterialSymbolsAddPrimary, height: 24.adaptSize, width: 24.adaptSize, alignment: Alignment.center))]))); } 
/// Section Widget
Widget _buildPrice(BuildContext context) { return BlocSelector<InventoryAddOneBloc, InventoryAddOneState, TextEditingController?>(selector: (state) => state.priceController, builder: (context, priceController) {return CustomTextFormField(controller: priceController, hintText: "lbl_bag_price".tr);}); } 
/// Section Widget
Widget _buildTotal(BuildContext context) { return BlocSelector<InventoryAddOneBloc, InventoryAddOneState, TextEditingController?>(selector: (state) => state.totalController, builder: (context, totalController) {return CustomTextFormField(controller: totalController, hintText: "lbl_total".tr, textInputAction: TextInputAction.done);}); } 
/// Section Widget
Widget _buildFeedReceived(BuildContext context) { return CustomElevatedButton(text: "lbl_feed_received".tr, margin: EdgeInsets.only(left: 16.h, right: 16.h, bottom: 29.v), onPressed: () {onTapFeedReceived(context);}); } 
/// Navigates to the inventoryScreen when the action is triggered.
onTapArrowOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.inventoryScreen, ); } 

/// Displays a dialog with the [InventoryAddDialog] content.
onTapFeedReceived(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: InventoryAddDialog.builder(context),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: const EdgeInsets.only(left: 0),)); } 
 }
