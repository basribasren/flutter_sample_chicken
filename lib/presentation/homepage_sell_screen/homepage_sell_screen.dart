import 'bloc/homepage_sell_bloc.dart';import 'models/homepage_sell_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/core/utils/validation_functions.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_elevated_button.dart';import 'package:basri_s_application4/widgets/custom_text_form_field.dart';import 'package:dotted_border/dotted_border.dart';import 'package:flutter/material.dart';import 'package:basri_s_application4/presentation/homepage_sell_two_dialog/homepage_sell_two_dialog.dart';
// ignore_for_file: must_be_immutable
class HomepageSellScreen extends StatelessWidget {HomepageSellScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<HomepageSellBloc>(create: (context) => HomepageSellBloc(HomepageSellState(homepageSellModelObj: HomepageSellModel()))..add(HomepageSellInitialEvent()), child: HomepageSellScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 16.h, vertical: 9.v), child: Column(children: [Align(alignment: Alignment.centerLeft, child: Text("lbl_broiler".tr, style: CustomTextStyles.titleMediumSemiBold_1)), SizedBox(height: 23.v), _buildUploadImage(context), SizedBox(height: 27.v), _buildCategoryLabel(context), SizedBox(height: 15.v), _buildQuantityLabel(context), SizedBox(height: 15.v), _buildContactNumberLabel(context), SizedBox(height: 15.v), _buildStateLabel(context), SizedBox(height: 15.v), _buildCity1(context), SizedBox(height: 15.v), _buildDescriptionLabel(context), SizedBox(height: 5.v)]))), bottomNavigationBar: _buildPost(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 55.v, leadingWidth: 37.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrow1, margin: EdgeInsets.only(left: 19.h, top: 20.v, bottom: 16.v), onTap: () {onTapArrowOne(context);}), title: AppbarTitle(text: "lbl_post_your_ad".tr, margin: EdgeInsets.only(left: 26.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 13.v, 16.h, 19.v))]); } 
/// Section Widget
Widget _buildUploadImage(BuildContext context) { return SizedBox(height: 127.v, width: 357.h, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.bottomCenter, child: Padding(padding: EdgeInsets.only(bottom: 23.v), child: Text("lbl_upload_image".tr, style: theme.textTheme.labelLarge))), Align(alignment: Alignment.center, child: DottedBorder(color: appTheme.blueGray40001, padding: EdgeInsets.only(left: 2.h, top: 2.v, right: 2.h, bottom: 2.v), strokeWidth: 2.h, radius: Radius.circular(15), borderType: BorderType.RRect, dashPattern: [7, 7], child: Container(padding: EdgeInsets.symmetric(horizontal: 151.h, vertical: 23.v), decoration: AppDecoration.outlineBlueGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder15), child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 27.v), CustomImageView(imagePath: ImageConstant.imgIcOutlineFileUpload, height: 50.adaptSize, width: 50.adaptSize)]))))])); } 
/// Section Widget
Widget _buildCategoryLabel(BuildContext context) { return BlocSelector<HomepageSellBloc, HomepageSellState, TextEditingController?>(selector: (state) => state.categoryLabelController, builder: (context, categoryLabelController) {return CustomTextFormField(controller: categoryLabelController, hintText: "lbl_category2".tr, suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 21.v, 21.h, 22.v), child: CustomImageView(imagePath: ImageConstant.imgMenu136, height: 16.adaptSize, width: 16.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 59.v), contentPadding: EdgeInsets.only(left: 19.h, top: 20.v, bottom: 20.v));}); } 
/// Section Widget
Widget _buildQuantityLabel(BuildContext context) { return BlocSelector<HomepageSellBloc, HomepageSellState, TextEditingController?>(selector: (state) => state.quantityLabelController, builder: (context, quantityLabelController) {return CustomTextFormField(controller: quantityLabelController, hintText: "lbl_quantity".tr);}); } 
/// Section Widget
Widget _buildContactNumberLabel(BuildContext context) { return BlocSelector<HomepageSellBloc, HomepageSellState, TextEditingController?>(selector: (state) => state.contactNumberLabelController, builder: (context, contactNumberLabelController) {return CustomTextFormField(controller: contactNumberLabelController, hintText: "lbl_contact_number2".tr, textInputType: TextInputType.number, validator: (value) {if (!isNumeric(value)) {return "err_msg_please_enter_valid_number".tr;} return null;});}); } 
/// Section Widget
Widget _buildStateLabel(BuildContext context) { return BlocSelector<HomepageSellBloc, HomepageSellState, TextEditingController?>(selector: (state) => state.stateLabelController, builder: (context, stateLabelController) {return CustomTextFormField(controller: stateLabelController, hintText: "lbl_state".tr);}); } 
/// Section Widget
Widget _buildCity(BuildContext context) { return Expanded(child: Padding(padding: EdgeInsets.only(right: 8.h), child: BlocSelector<HomepageSellBloc, HomepageSellState, TextEditingController?>(selector: (state) => state.cityController, builder: (context, cityController) {return CustomTextFormField(controller: cityController, hintText: "lbl_city".tr);}))); } 
/// Section Widget
Widget _buildVillageLabel(BuildContext context) { return Expanded(child: Padding(padding: EdgeInsets.only(left: 8.h), child: BlocSelector<HomepageSellBloc, HomepageSellState, TextEditingController?>(selector: (state) => state.villageLabelController, builder: (context, villageLabelController) {return CustomTextFormField(controller: villageLabelController, hintText: "lbl_village".tr);}))); } 
/// Section Widget
Widget _buildCity1(BuildContext context) { return Row(mainAxisAlignment: MainAxisAlignment.center, children: [_buildCity(context), _buildVillageLabel(context)]); } 
/// Section Widget
Widget _buildDescriptionLabel(BuildContext context) { return BlocSelector<HomepageSellBloc, HomepageSellState, TextEditingController?>(selector: (state) => state.descriptionLabelController, builder: (context, descriptionLabelController) {return CustomTextFormField(controller: descriptionLabelController, hintText: "lbl_description2".tr, textInputAction: TextInputAction.done);}); } 
/// Section Widget
Widget _buildPost(BuildContext context) { return CustomElevatedButton(text: "lbl_post".tr, margin: EdgeInsets.only(left: 16.h, right: 16.h, bottom: 22.v), onPressed: () {onTapPost(context);}); } 
/// Navigates to the homepageSellOneScreen when the action is triggered.
onTapArrowOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.homepageSellOneScreen, ); } 

/// Displays a dialog with the [HomepageSellTwoDialog] content.
onTapPost(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: HomepageSellTwoDialog.builder(context),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: const EdgeInsets.only(left: 0),)); } 
 }
