import '../customer_list_one_screen/widgets/customerlistone_item_widget.dart';import 'bloc/customer_list_one_bloc.dart';import 'models/customer_list_one_model.dart';import 'models/customerlistone_item_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/presentation/homepage_service_buy_page/homepage_service_buy_page.dart';import 'package:basri_s_application4/presentation/income_one_page/income_one_page.dart';import 'package:basri_s_application4/presentation/new_order_tab_container_page/new_order_tab_container_page.dart';import 'package:basri_s_application4/presentation/single_batch_view_income_page/single_batch_view_income_page.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_bottom_bar.dart';import 'package:basri_s_application4/widgets/custom_floating_button.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class CustomerListOneScreen extends StatelessWidget {CustomerListOneScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<CustomerListOneBloc>(create: (context) => CustomerListOneBloc(CustomerListOneState(customerListOneModelObj: CustomerListOneModel()))..add(CustomerListOneInitialEvent()), child: CustomerListOneScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: SizedBox(width: double.maxFinite, child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 47.v), _buildCustomerListOne(context), Spacer()])), bottomNavigationBar: _buildBottomBar(context), floatingActionButton: _buildFloatingActionButton(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 55.v, leadingWidth: 37.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrow1, margin: EdgeInsets.only(left: 19.h, top: 20.v, bottom: 16.v), onTap: () {onTapArrowOne(context);}), title: AppbarTitle(text: "lbl_customer_list".tr, margin: EdgeInsets.only(left: 26.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 13.v, 16.h, 19.v))]); } 
/// Section Widget
Widget _buildCustomerListOne(BuildContext context) { return Column(children: [Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildHimanshuBains(context, userName: "lbl_subhash_mane".tr, mobileNo: "lbl_91_9355548313".tr)), SizedBox(height: 17.v), BlocSelector<CustomerListOneBloc, CustomerListOneState, CustomerListOneModel?>(selector: (state) => state.customerListOneModelObj, builder: (context, customerListOneModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return Padding(padding: EdgeInsets.symmetric(vertical: 29.5.v), child: SizedBox(width: double.maxFinite, child: Divider(height: 1.v, thickness: 1.v, color: appTheme.gray300)));}, itemCount: customerListOneModelObj?.customerlistoneItemList.length ?? 0, itemBuilder: (context, index) {CustomerlistoneItemModel model = customerListOneModelObj?.customerlistoneItemList[index] ?? CustomerlistoneItemModel(); return CustomerlistoneItemWidget(model);});}), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildHimanshuBains(context, userName: "lbl_himanshu_bains".tr, mobileNo: "lbl_91_9155568167".tr)), SizedBox(height: 36.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildHimanshuBains(context, userName: "lbl_keshav_hari".tr, mobileNo: "lbl_91_7555470561".tr)), SizedBox(height: 38.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildHimanshuBains(context, userName: "msg_ujjwal_ramprasad".tr, mobileNo: "lbl_91_8555768335".tr)), SizedBox(height: 36.v), Padding(padding: EdgeInsets.symmetric(horizontal: 16.h), child: _buildHimanshuBains(context, userName: "msg_siddharth_rao_wagle".tr, mobileNo: "lbl_91_9755530978".tr)), SizedBox(height: 16.v)]); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
/// Section Widget
Widget _buildFloatingActionButton(BuildContext context) { return CustomFloatingButton(height: 60, width: 60, backgroundColor: theme.colorScheme.primary, child: CustomImageView(imagePath: ImageConstant.imgMaterialSymbolsAdd, height: 30.0.v, width: 30.0.h)); } 
/// Common widget
Widget _buildHimanshuBains(BuildContext context, {required String userName, required String mobileNo, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text(userName, style: CustomTextStyles.titleMedium16.copyWith(color: appTheme.black900)), Padding(padding: EdgeInsets.only(top: 5.v), child: Text(mobileNo, style: CustomTextStyles.bodySmallPoppins12.copyWith(color: appTheme.black900)))]); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Buysell: return AppRoutes.homepageServiceBuyPage; case BottomBarEnum.Batches: return AppRoutes.singleBatchViewIncomePage; case BottomBarEnum.Feedmanagement: return AppRoutes.newOrderTabContainerPage; case BottomBarEnum.Farmsettings: return AppRoutes.incomeOnePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.homepageServiceBuyPage: return HomepageServiceBuyPage.builder(context); case AppRoutes.singleBatchViewIncomePage: return SingleBatchViewIncomePage.builder(context); case AppRoutes.newOrderTabContainerPage: return NewOrderTabContainerPage.builder(context); case AppRoutes.incomeOnePage: return IncomeOnePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the farmSettingsScreen when the action is triggered.
onTapArrowOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.farmSettingsScreen, ); } 
 }
