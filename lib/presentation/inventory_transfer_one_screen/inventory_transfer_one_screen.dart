import 'bloc/inventory_transfer_one_bloc.dart';import 'models/inventory_transfer_one_model.dart';import 'package:basri_s_application4/core/app_export.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application4/widgets/app_bar/appbar_trailing_image.dart';import 'package:basri_s_application4/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application4/widgets/custom_elevated_button.dart';import 'package:basri_s_application4/widgets/custom_outlined_button.dart';import 'package:basri_s_application4/widgets/custom_switch.dart';import 'package:basri_s_application4/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';import 'package:basri_s_application4/presentation/inventory_transfer_three_dialog/inventory_transfer_three_dialog.dart';class InventoryTransferOneScreen extends StatelessWidget {const InventoryTransferOneScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<InventoryTransferOneBloc>(create: (context) => InventoryTransferOneBloc(InventoryTransferOneState(inventoryTransferOneModelObj: InventoryTransferOneModel()))..add(InventoryTransferOneInitialEvent()), child: InventoryTransferOneScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 16.h), child: Column(children: [Align(alignment: Alignment.centerLeft, child: Row(children: [Padding(padding: EdgeInsets.only(top: 3.v, bottom: 1.v), child: Text("lbl_stock_in".tr, style: theme.textTheme.bodyMedium)), BlocSelector<InventoryTransferOneBloc, InventoryTransferOneState, bool?>(selector: (state) => state.isSelectedSwitch, builder: (context, isSelectedSwitch) {return CustomSwitch(margin: EdgeInsets.only(left: 11.h), value: isSelectedSwitch, onChange: (value) {context.read<InventoryTransferOneBloc>().add(ChangeSwitchEvent(value: value));});}), Padding(padding: EdgeInsets.only(left: 10.h, top: 3.v, bottom: 1.v), child: Text("lbl_stock_out".tr, style: CustomTextStyles.bodyMediumBlack900))])), SizedBox(height: 22.v), _buildFeedTypeName(context), SizedBox(height: 15.v), _buildTransferToBatchName(context), SizedBox(height: 15.v), _buildFifty1(context), SizedBox(height: 5.v)])), bottomNavigationBar: _buildTransferFeed(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 37.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrow1, margin: EdgeInsets.only(left: 19.h, top: 19.v, bottom: 18.v), onTap: () {onTapArrowOne(context);}), title: AppbarTitle(text: "msg_transfer_inventory".tr, margin: EdgeInsets.only(left: 26.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgDots1, margin: EdgeInsets.fromLTRB(16.h, 13.v, 16.h, 20.v))]); } 
/// Section Widget
Widget _buildFeedTypeName(BuildContext context) { return BlocSelector<InventoryTransferOneBloc, InventoryTransferOneState, TextEditingController?>(selector: (state) => state.feedTypeNameController, builder: (context, feedTypeNameController) {return CustomTextFormField(controller: feedTypeNameController, hintText: "lbl_feed_type".tr, suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 21.v, 22.h, 21.v), child: CustomImageView(imagePath: ImageConstant.imgMenu136, height: 16.adaptSize, width: 16.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 58.v), contentPadding: EdgeInsets.only(left: 21.h, top: 19.v, bottom: 19.v));}); } 
/// Section Widget
Widget _buildTransferToBatchName(BuildContext context) { return BlocSelector<InventoryTransferOneBloc, InventoryTransferOneState, TextEditingController?>(selector: (state) => state.transferToBatchNameController, builder: (context, transferToBatchNameController) {return CustomTextFormField(controller: transferToBatchNameController, hintText: "msg_transfer_to_batch".tr, textInputAction: TextInputAction.done, suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 22.v, 22.h, 21.v), child: CustomImageView(imagePath: ImageConstant.imgMenu136, height: 16.adaptSize, width: 16.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 59.v), contentPadding: EdgeInsets.only(left: 20.h, top: 20.v, bottom: 20.v));}); } 
/// Section Widget
Widget _buildFifty(BuildContext context) { return CustomOutlinedButton(height: 59.v, width: 51.h, text: "lbl_50".tr); } 
/// Section Widget
Widget _buildFifty1(BuildContext context) { return Align(alignment: Alignment.centerRight, child: Padding(padding: EdgeInsets.only(left: 21.h), child: Row(mainAxisAlignment: MainAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(top: 22.v, bottom: 17.v), child: Text("lbl_bags_quantity".tr, style: theme.textTheme.bodyMedium)), Spacer(), Container(height: 59.v, width: 42.h, padding: EdgeInsets.symmetric(horizontal: 8.h, vertical: 16.v), decoration: AppDecoration.outlinePrimary1.copyWith(borderRadius: BorderRadiusStyle.customBorderTL10), child: CustomImageView(imagePath: ImageConstant.imgIcBaselineMinus, height: 24.adaptSize, width: 24.adaptSize, alignment: Alignment.center)), _buildFifty(context), Container(height: 59.v, width: 42.h, padding: EdgeInsets.symmetric(horizontal: 8.h, vertical: 16.v), decoration: AppDecoration.outlinePrimary1.copyWith(borderRadius: BorderRadiusStyle.customBorderTL10), child: CustomImageView(imagePath: ImageConstant.imgMaterialSymbolsAddPrimary, height: 24.adaptSize, width: 24.adaptSize, alignment: Alignment.center))]))); } 
/// Section Widget
Widget _buildTransferFeed(BuildContext context) { return CustomElevatedButton(text: "lbl_transfer_feed".tr, margin: EdgeInsets.only(left: 16.h, right: 16.h, bottom: 29.v), onPressed: () {onTapTransferFeed(context);}); } 
/// Navigates to the inventoryScreen when the action is triggered.
onTapArrowOne(BuildContext context) { NavigatorService.pushNamed(AppRoutes.inventoryScreen, ); } 

/// Displays a dialog with the [InventoryTransferThreeDialog] content.
onTapTransferFeed(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: InventoryTransferThreeDialog.builder(context),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: const EdgeInsets.only(left: 0),)); } 
 }
